{"version":3,"sources":["utils/API.js","pages/SubmitIssue/SubmitIssue.js","pages/Dashboard/Dashboard.js","pages/SigninPage/SigninPage.js","components/Sidebar/Sidebar.js","pages/UserProfile/UserProfile.js","pages/OrganizationProfile/OrganizationProfile.js","pages/ProjectProfile/ProjectProfile.js","pages/DeveloperView/DeveloperView.js","App.js","registerServiceWorker.js","index.js"],"names":["API","getUsers","q","console","log","axios","get","params","createUser","userData","post","findOneUser","email","deleteUser","id","concat","delete","getOrgs","createOrganization","orgData","getIssues","createIssue","issueData","updateIssue","put","createProject","projData","getProjects","createVersion","getVersions","findOneVersion","SubmitIssue","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFieldChange","event","fieldId","target","fieldValue","value","setState","defineProperty","clearState","objectSpread","state","organization","project","subject","description","owner","comment","url","status","resolved","priority","targetResolutionDate","potentialImpact","image","partImpacted","type","then","alert","_this2","classes","react_default","a","createElement","className","container","noValidate","autoComplete","Typography","variant","TextField","disabled","label","placeholder","textField","defaultValue","name","margin","onChange","bind","required","InputLabelProps","shrink","style","fullWidth","Button","color","button","endIcon","RotateLeft_default","onClick","Icon","Component","withRouter","withStyles","theme","display","flexWrap","alignItems","padding","spacing","mixins","toolbar","paddingLeft","paddingTop","marginLeft","marginRight","width","content","flexGrow","wrapper","position","withTheme","useStyles","makeStyles","cardsContent","justifyContent","breakpoints","only","card","minWidth","maxWidth","marginTop","wideCard","mouseEntered","mouseLeft","bullet","transform","cardTitle","marginBottom","fontSize","pos","Dashboard","Fragment","Card","CardContent","component","CardActions","size","window","open","focus","Link","require","config","firebase","initializeApp","apiKey","authDomain","SigninPage","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","GithubAuthProvider","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","componentDidMount","onAuthStateChanged","user","isSignedIn","componentDidUpdate","setPersistence","Auth","Persistence","SESSION","catch","error","code","message","CssBaseline","Container","backgroundColor","height","react_router","to","pathname","referrer","StyledFirebaseAuth_default","firebaseAuth","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","up","_clsx3","_clsx4","useTheme","_React$useState","React","useState","_React$useState2","slicedToArray","setOpen","AppBar","clsx","Toolbar","IconButton","aria-label","edge","Menu_default","noWrap","disableGutters","title","flex","Tooltip","signOut","history","push","rel","Lock_default","href","GitHub_default","Drawer","paper","direction","ChevronRight_default","ChevronLeft_default","Divider","List","map","text","index","ListItem","key","showDashboard","showSubmitIssue","showUserProfile","showOrganizationProfile","showProjectProfile","ListItemIcon","MoveToInbox_default","Mail_default","ListItemText","primary","children","UserProfile","userType","getUser","res","data","saveUser","displayName","firstName","split","lastName","length","photoURL","OrganizationProfile","orgName","orgDescription","orgUrl","member","getAllOrgs","getOneOrg","saveOrg","ProjectProfile","handleOrgSelect","ind","organizationNames","indexOf","selectedId","keys","organizationList","orgId","handleProjSelect","projectNames","projectList","projId","projName","projDescription","verId","verName","verDescription","versionList","orgs","objects","obj","_id","names","getAllProj","saveProj","proj","err","getAllVers","vers","getOneVer","ver","saveVer","FormControl","formControl","InputLabel","Select","labelId","org","MenuItem","styles","DeveloperView","changeName","activeView","handldIssueChange","handleSubmitIssue","val","determineView","handleUserSave","checkNewUser","authEmail","authenticate","emailVerified","idToken","getIdToken","toggleTheme","assertThisInitialized","e","view","newView","Dashboard_Dashboard","pages_SubmitIssue_SubmitIssue","pages_UserProfile_UserProfile","pages_OrganizationProfile_OrganizationProfile","pages_ProjectProfile_ProjectProfile","Sidebar_Sidebar","_title","main","flexDirection","hero","palette","background","dark","letterSpacing","textIndent","fontWeight","typography","fontWeightLight","h5","paddingRight","textAlign","logo","maxHeight","steps","step","stepIcon","markdownElement","App","ProtectedRoute","_ref","rest","objectWithoutProperties","assign","render","AuthenticateButton","useHistory","authentication","isAuthenticated","signout","LandingPage","_ref2","useEffect","localStorage","find","match","JSON","parse","getItem","isAuthorised","ex","BugReportTwoTone_default","alt","align","gutterBottom","buttonGroup","handler","react_router_dom","exact","path","pages_DeveloperView_DeveloperView","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3c7308ee.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // ok\n  getUsers: function (q) {\n    console.log(`\\n getUsers is querying for : `, q);\n    return axios.get(\"/api/users\", { params: { q } });\n  },\n\n  // ok, I think?\n  createUser: function (userData) {\n    // console.log(`\\n createUser is attempting to save : `, userData);\n    return axios.post(\"/api/users\", userData);\n  },\n\n  // params search required key and value.\n  // key of email and value of address is like\n  // http://localhost:3000/api/users?email=dudkny@gmail.com\n\n  // missing explicit param turn it into \"query\" like\n  // ... /api/users?q=dudkny@gmail.com\n\n  // http://localhost:3000/api/users?email=dudkny@gmail.com\n  findOneUser: function (email) {\n    console.log(`\\n API says findOneUser : `, email);\n    return axios.get(\"/api/users\", { params: { email } });\n    // Must wrap params as above. Below does not work.\n    // console.log(`\\n findOneUser is querying for : `, email);\n    // return axios.get(\"/api/users\", email);\n    // \n  },\n\n  // Deletes the saved user with the given id\n  deleteUser: function (id) {\n    console.log(`\\n deleteUser is attempting to delete : ${id}`);\n    return axios.delete(\"/api/users/\" + id);\n  },\n\n  // ORG\n\n  getOrgs: function (q) {\n    console.log(`\\n API getOrgs : `, q);\n    return axios.get(\"/api/orgs\", { params: { q } });\n  },\n\n  // oks\n  createOrganization: function (orgData) {\n    console.log('API create org');\n    return axios.post(\"/api/orgs\", orgData);\n  },\n\n  getIssues: function (q) {\n    console.log(`\\n getIssues is querying for : ${q}`);\n    return axios.get(\"/api/issues\", { params: { q } });\n  },\n\n  // maybe? Can't tell until I have org, etc to assign it to.\n  createIssue: function (issueData) {\n    console.log(`\\n createIssue is attempting to create : `, issueData);\n    return axios.post(\"/api/issues\", issueData);\n  },\n\n  updateIssue: function (id) {\n    // console.log(`\\n createIssue is attempting to update : `, id);\n    console.log(`\\n API: updating issue`);\n    return axios.put(\"/api/issues/\" + id);\n  },\n\n  // Project\n\n  // test after creating version.\n  // this is object in form of { name: this.name }\n  createProject: function (projData) {\n    console.log('API create project', projData);\n    return axios.post(\"/api/projects\", projData);\n  },\n\n  // test \n  getProjects: function (q) {\n    console.log('API get projects :', q);\n    return axios.get(\"/api/projects\", { params: { q } });\n    // return axios.get('/api/projects', q)\n  },\n\n  // getUsers: function (q) {\n  //   console.log(`\\n getUsers is querying for : `, q);\n  //   return axios.get(\"/api/users\", { params: { q } });\n  // },\n  // Version\n\n  createVersion: function (orgData) {\n    console.log('API create version');\n    return axios.post(\"/api/versions\", orgData);\n  },\n\n  getVersions: function (q) {\n    console.log(`\\n getVersions is querying for : `, q);\n    return axios.get(\"/api/versions\", { params: { q } });\n  },\n\n  findOneVersion: function (id) {\n    console.log(`\\n API find one version : `, id);\n    return axios.get(\"/api/versions\", { params: { id } });\n  }\n};\n","// React\nimport React\n, {\n    Component,\n    // useState\n}\n    from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// Material UI\nimport {\n    // makeStyles, // used in functional component\n    // useStyles, // Stateful Components cannot use Hooks such as useStyles.\n    withStyles\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport API from '../../utils/API';\n\n// Components\n// import Sidebar from '../../components/Sidebar';\n\nconst styles = theme => ({\n    // const styles = makeStyles(theme => ({\n    // const useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n\n        alignItems: 'center',\n        // justifyContent: 'flex-end',\n        // justifyContent: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        // width: `calc(100% - 240px)`,\n        paddingLeft: 240,\n        paddingTop: '12vh',\n\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n\n    wrapper: {\n        position: 'relative',\n    },\n    button: {\n        margin: theme.spacing(1),\n    }\n})\n\nclass SubmitIssue extends Component {\n    // function SubmitIssue(props) {\n\n    constructor(props) {\n        super(props);\n        // State updater function to be passed down into the context provider per https://reactjs.org/docs/context.html\n        this.state = {\n            // name: this.props.name,\n            // email: this.props.email,\n            // type: 'Technical'\n        }\n    }\n\n    // const classes = useStyles();\n    // const theme = useTheme();\n\n    // let issueObject = {\n    //     test1: '',\n    //     test2: ''\n    // }\n\n    // onChange(field, value) {\n    //     // parent class change handler is always called with field name and value\n    //     this.setState({ [field]: value });\n    // }\n\n    // initialState = { // add const if functional comp\n    //     name: this.props.name,\n    //     email: this.props.email\n    // };\n\n    handleFieldChange = (event) => {\n        // for a regular input field, read field name and value from the event\n        const fieldId = event.target.id;\n        const fieldValue = event.target.value;\n        // this.props.onChange(fieldName, fieldValue); // could use if updating parent state\n        // this.state.onChange(fieldName, fieldValue);\n\n        // console.log(fieldId, fieldValue);\n        this.setState(\n            { [fieldId]: fieldValue }\n        ); // this works\n        // this.setState({ testObj: { [fieldId]: fieldValue } }); // not rly. keeps adding indexed\n\n        // this.setState({\n        //         testArr: [\n        //             // ...this.state.testArr, \n        //             {\n        //                 [fieldId]: fieldValue\n        //             }\n        //         ]\n\n        //     }\n\n        // }); // \n        // console.log('handle field change :', this.state); // this will be one step slower\n    }\n\n    clearState = () => {\n        this.setState({\n            ...this.state,\n            // required\n            organization: '',\n            project: '',\n            subject: '',\n            description: '',\n            owner: '',\n\n            // This is string here but DB stores it as array\n            comment: '',\n\n            // optional in current scope\n            url: '',\n            status: '',\n            resolved: '',\n            priority: '',\n            targetResolutionDate: '',\n            potentialImpact: '',\n            image: '',\n            partImpacted: ''\n        })\n    };\n    //  onChange = e => {\n    //     const { name, value } = e.target;\n    //     setState(prevState => ({ ...prevState, [name]: value }));\n    //   };\n\n    // handleReset = e => {\n    //     e.preventDefault();\n    //     signupUser().then(this.clearState);\n    // };\n\n    createIssue = () => {\n        API.createIssue({\n            // this.state\n            type: this.state.type,\n            organization: this.state.organization, // ObjectId\n            project: this.state.project, // ObjectId\n            subject: this.state.subject,\n            description: this.state.description,\n            comment: this.state.comment,\n            owner: this.state.owner, // ObjectId\n\n            // optional in this version\n            url: this.state.url,\n            status: this.state.status,\n            resolved: this.state.resolved,\n            priority: this.state.priority,\n            targetResolutionDate: this.state.targetResolutionDate,\n            potentialImpact: this.state.potentialImpact,\n            image: this.state.image,\n            partImpacted: this.state.partImpacted\n        }).then(() => alert('done'))\n\n        // API.saveBook({\n        //     googleId: book.id,\n        //     title: book.volumeInfo.title,\n        //     subtitle: book.volumeInfo.subtitle,\n        //     link: book.volumeInfo.infoLink,\n        //     authors: book.volumeInfo.authors,\n        //     description: book.volumeInfo.description,\n        //     image: book.volumeInfo.imageLinks.thumbnail\n        //   }).then(() => this.getBooks());\n    }\n\n    componentDidUpdate() {\n        console.log('component did update :', this.state);\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <form className={classes.container} noValidate autoComplete=\"off\" >\n                <div>\n                    <Typography variant='body2'>Asterisk(*) denotes required fields.</Typography>\n                    <br></br>\n                    <TextField\n                        id=\"name\"\n                        disabled\n                        label=\"Your Name\"\n                        placeholder=\"John Doe\"\n                        className={classes.textField}\n                        defaultValue={this.props.name}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        id=\"email\"\n                        disabled\n                        label=\"Your Email\"\n                        defaultValue={this.props.email}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        id=\"type\"\n                        disabled\n                        label=\"Issue Type\"\n                        defaultValue={this.props.type}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                    <TextField\n                        id=\"organization\"\n                        required\n                        label=\"Provider\"\n                        value={this.state.organization}\n                        className={classes.textField}\n                        InputLabelProps={{ // Prevent label from appearing as placeholder\n                            shrink: true,\n                        }}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                    <TextField\n                        id=\"project\"\n                        required\n                        label=\"Project\"\n                        // placeholder=\"Who is the provider?\"\n                        value={this.state.project}\n                        className={classes.textField}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                </div>\n                <div>\n                    <TextField\n                        id=\"subject\"\n                        required\n                        label=\"Subject\"\n                        value={this.state.subject}\n                        style={{ margin: 8 }}\n                        // placeholder=\"Placeholder\"\n                        // helperText=\"What seems to be the trouble?\"\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                    <TextField\n                        id=\"description\"\n                        required\n                        label=\"Issue Description\"\n                        value={this.state.description}\n                        style={{ margin: 8 }}\n                        // placeholder=\"Placeholder\"\n                        // helperText=\"What seems to be the trouble?\"\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                    <TextField\n                        id=\"comment\"\n                        label=\"Comment\"\n                        placeholder=\"Any thoughts?\"\n                        value={this.state.comment}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                    {/* <TextField\n                        id=\"standard-number\"\n                        label=\"Number\"\n                        type=\"number\"\n                        className={classes.textField}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    /> */}\n                    {/* <TextField\n                        id=\"standard-search\"\n                        label=\"Search field\"\n                        type=\"search\"\n                        className={classes.textField}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    /> */}\n                    <div className='button-group'>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.button}\n                            endIcon={<RotateLeftIcon>Reset Form</RotateLeftIcon>}\n                            onClick={\n                                // this.props.handleSubmitIssue(this.state.testArr) // causes loop SA\n                                () => {\n                                    console.log('clicked reset while state is', this.state)\n                                    // this.props.handleSubmitIssue()\n                                    this.clearState()\n                                }\n                            }\n                        > Reset Form\n                    </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            endIcon={<Icon>send</Icon>}\n                            onClick={\n                                this.createIssue\n                                /*\n                                // this.props.handleSubmitIssue(this.state.testArr) // causes loop SA\n                                () => {\n                                    console.log('clicked button', this.state)\n\n                                    const keys = [\n                                        \"type\",\n                                        \"organization\",\n                                        \"project\",\n                                        \"subject\",\n                                        \"description\",\n                                        \"comment\",\n                                        \"owner\",\n\n                                        // optional in this version\n                                        \"url\",\n                                        \"status\",\n                                        \"resolved\",\n                                        \"priority\",\n                                        \"targetResolutionDate\",\n                                        \"potentialImpact\",\n                                        \"image\",\n                                        \"partImpacted\"\n                                    ]\n\n                                    // Loop through keys and get values\n                                    // let values = keys.map(\n                                        // (key) => {\n                                    for (let key of keys) {\n                                        // this.props.handleSubmitIssue(key, this.state[key]) // works\n\n                                    }\n                                        // }\n                                        // console.log(this.state[key]) // works\n                                    // )\n\n                                    // this.props.handleSubmitIssue(values)\n\n\n                                }\n                                */\n                            }\n                        > Submit\n                    </Button>\n                    </div>\n                </div>\n\n            </form>\n        )\n\n    }\n}\n\n// export default withRouter(SubmitIssue)\nexport default withRouter(withStyles(styles, { withTheme: true })(SubmitIssue))\n","//React\r\nimport React from 'react'\r\n\r\n// Material UI\r\nimport Button from '@material-ui/core/Button';\r\n// import Group from '@material-ui/icons/Group';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  // withStyles, \r\n  makeStyles,\r\n  // useTheme \r\n} from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n// Other modules\r\n// import CountUp from 'react-countup'\r\n// import { injectIntl } from 'react-intl'\r\n// import { withFirebase } from 'firekit-provider'\r\n// import { Line, Bar, Doughnut } from 'react-chartjs-2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  // const styles = makeStyles(theme => ({\r\n  // root: {\r\n  //   align: 'center',\r\n  //   display: 'flex',\r\n  // },\r\n  cardsContent: {\r\n    // padding: 15,\r\n    paddingTop: '12vh',\r\n    paddingLeft: 15,\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    flexWrap: 'wrap',\r\n    [theme.breakpoints.only('xs')]: {\r\n      width: '100%',\r\n      padding: 0,\r\n      // paddingTop: 15\r\n      paddingTop: 60,\r\n      paddingLeft: 0,\r\n\r\n    }\r\n  },\r\n  card: {\r\n    minWidth: \"37vw\",\r\n    // maxWidth: 350,\r\n    maxWidth: \"50%\",\r\n    margin: 15,\r\n    [theme.breakpoints.only('xs')]: {\r\n      minWidth: 275,\r\n      width: '100%',\r\n      margin: 0,\r\n      marginTop: 7\r\n    },\r\n    // \"&:last-child\": {\r\n    //   marginTop: 25,\r\n    // }\r\n  },\r\n  wideCard: {\r\n    minWidth: \"90%\",\r\n    // maxWidth: 350,\r\n    maxWidth: \"90%\",\r\n    margin: 15,\r\n    [theme.breakpoints.only('xs')]: {\r\n      width: '100%',\r\n      margin: 0,\r\n      marginTop: 7\r\n    },\r\n  },\r\n  mouseEntered: {\r\n    color: \"red\",\r\n  },\r\n  mouseLeft: {\r\n    color: \"black\",\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)'\r\n  },\r\n  cardTitle: {\r\n    marginBottom: 16,\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n}))\r\n\r\nfunction Dashboard() {\r\n  /*\r\n    let state = {\r\n      // This tells the AppBar which menu to highlight, maybe.\r\n      currentPage: \"\",\r\n  \r\n      // Submitted, In progress, Resolved, Closed...\r\n      counts: {\r\n        submitted: 5,\r\n        reviewed: 1,\r\n        resolved: 1,\r\n        closed: 3\r\n      },\r\n  \r\n      latestIssue: {},\r\n  \r\n      // Status updates in sentence form: MM/DD/YY hh:mm - ${assignee} ${action description} (Issue #${###-###-###-###})\r\n      // Give thoughts on the issue number structure.\r\n      notifications: []\r\n    };\r\n  */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.cardsContent}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Organization Summary\r\n          </Typography>\r\n            <br />\r\n            <Typography>{'Paste this in Node command line:'}</Typography>\r\n            <br />\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              <br></br>\r\n              Submitted:\r\n              {/* {this.state.counts.submitted} */}\r\n              {' '}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              size=\"small\"\r\n              onClick={() => {\r\n                let win = window.open('https://github.com/danninemx/project-issue-manager', '_blank')\r\n                win.focus()\r\n              }}\r\n            >\r\n              Learn More\r\n          </Button>\r\n          </CardActions>\r\n        </Card>\r\n\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              My Issues\r\n          </Typography>\r\n            <br />\r\n            <Typography>{'Paste this in Node command line:'}</Typography>\r\n            <br />\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              <br></br>\r\n              Submitted:\r\n              {/* {this.state.counts.submitted} */}\r\n              {' '}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              size=\"small\"\r\n              onClick={() => {\r\n                let win = window.open('https://github.com/danninemx/project-issue-manager', '_blank')\r\n                win.focus()\r\n              }}\r\n            >\r\n              Learn More\r\n          </Button>\r\n          </CardActions>\r\n        </Card>\r\n\r\n\r\n        <Card className={classes.wideCard}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Notifications\r\n          </Typography>\r\n            <br />\r\n            <Link\r\n              component=\"button\"\r\n              variant=\"body1\"\r\n              color=\"textPrimary\"\r\n              onClick={() => {\r\n                console.log(\"Some accessibility message here...\")\r\n                let win = window.open('https://github.com/danninemx/project-issue-manager', '_blank')\r\n                win.focus()\r\n              }}\r\n            >\r\n              {'DISPLAY AUTOMATED MESSAGES HERE (e.g. Like this)'}\r\n            </Link>\r\n            <br />\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              <br></br>\r\n              11/20/2019 03:30 PM - Someone did Something, Something and Something.\r\n              {/* {this.state.counts.submitted} */}\r\n              <br></br>\r\n              11/20/2019 03:30 PM - Someone did Something, Something and Something.\r\n\r\n              <br></br>\r\n              11/20/2019 03:30 PM - Someone did Something, Something and Something.\r\n\r\n              {' '}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n// export default withStyles(styles)(Dashboard);\r\nexport default Dashboard;","import React, { Component } from \"react\"\nimport { Redirect } from 'react-router-dom'\n\n// Firebase Authentication\nimport firebase from \"firebase\"\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\n// import config from '../../../../config' (CRA app cannot reach outside /src)\n\n// Material UI\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nrequire('dotenv').config();\n// If running in non-production environment, load .env variables\n// if (process.env.NODE_ENV !== 'production') {\n//     require('dotenv').config();\n// }\n\n// console.log(\"\\n Environment variables :\", process.env);\n// console.log(\"\\n Exported environment variables :\", config);\n\n// let API_Key = process.env.Firebase_apiKey;\n// console.log(\"\\n API_Key : \", config.API_KEY);\n\n// These credentials are necessary and safe to be exposed to the client, as true backend is provided by Firebase\nfirebase.initializeApp({\n    // Firebase Console > Project Settings > Your project > Web API Key\n    apiKey: \"AIzaSyCzm64_uz3vESpXIPdgcOeeSFouv-fT5Gw\",\n    // Firebase Console > Authentication > Authorized Domains\n    authDomain: \"project-issue-manager.firebaseapp.com\"\n\n})\n\nclass SigninPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // Set default auth state of false\n        this.state = {\n            isSignedIn: false,\n            // isAuthenticated: false,\n        };\n\n        // this.routeChange = this.routeChange.bind(this); //testing\n    }\n\n    /*\n    routeChange() { // testing\n        // let path = `/`;\n        // this.props.history.push(path);\n        // this.props.history.push({\n        //     pathname: path,\n        //     state: {isAuthenticated: true}\n        // })\n        <App\n            isAuthenticated='true' />\n    }\n    */\n\n    // state = { isSignedIn: false }; // signed out by default\n\n    // Firebase UI signin configuration\n    uiConfig = {\n        signInFlow: \"popup\",\n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n            firebase.auth.GithubAuthProvider.PROVIDER_ID,\n            firebase.auth.EmailAuthProvider.PROVIDER_ID\n        ],\n        callbacks: {\n            // Return false means user-determined redirect, not auto-redirect.\n            signInSuccessWithAuthResult: () => {\n                // Determine here whether this is new user. \n                // If so, open details page.\n                // If not, proceed to appropriate data view.\n                return false;\n            }\n        }\n    }\n\n    componentDidMount = () => {\n\n        firebase.auth().onAuthStateChanged(user => {\n            this.setState({\n                // Coerce the value to be a boolean regardless of original type\n                isSignedIn: !!user\n            });\n            // console.log('this.props is :', this.props);\n            // console.log('this.props.handler is :', this.props.handler);\n            // console.log(\"\\n SigninPage sees this state : \", this.state);\n\n\n            // console.log('this.props.handleSignIn is :', this.props.handleSignIn);\n            // console.log('SigninPage sees \"isSignin\" in state : ', this.state.isSignedIn);\n            // console.log(\"SigninPage sees this user : \", user);\n        })\n\n\n    }\n\n    componentDidUpdate = () => {\n        // console.log('this.props.handler is :', this.props.handler)\n\n\n        // Consider adding \"keep me signed in\" checkbox which will enable this\n\n        // Change persistence from local storage to session storage\n        // Per https://firebase.google.com/docs/auth/web/auth-state-persistence\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\n            .then(function () {\n                // Existing and future Auth states are now persisted in the current\n                // session only. Closing the window would clear any existing state even\n                // if a user forgets to sign out.\n                // ...\n                // New sign-in will be persisted with session persistence.}\n            })\n            .catch(function (error) {\n                // Handle Errors here.\n                // let errorCode = error.code;\n                // let errorMessage = error.message;\n                console.log(`\\n error code : ${error.code}`,\n                    `\\n error message : ${error.message}`)\n            })\n    }\n\n    render() {\n        return (\n            // <div className=\"App\">\n            <React.Fragment>\n                <CssBaseline\n                />\n                <Container maxWidth=\"sm\"\n                    style={{\n                        backgroundColor: '#cfe8fc'\n                        , height: '100vh'\n                        , width: '100vw'\n                    }}>\n                    <Typography component=\"div\"\n                    // style={{\n                    //     backgroundColor: '#cfe8fc'\n                    // , height: '100vh' \n                    // }}\n                    >\n                        <h3>Please sign in to proceed.</h3>\n                        <h4>(If you do not have an account, one will be created for you.)</h4>\n                        {/* <Button onClick={this.props.handler}> */}\n                        {/*\n                    // this.routeChange\n                    \n                    // <Redirect\n                    //     to={{\n                    //         pathname: \"/\",\n                    //         state: {\n                    //             isAuthenticated: true,\n                    //             referrer: \"/signinpage\"\n                    //         }\n                    //     }}\n                    // />\n\n\n\n                    // this.props.handler();\n\n                    // this.props.history.push({\n                    //     pathname: '/',\n                    //     state: { isAuthenticated: true }\n                    // }); // redirect to LandingPage\n\n                    // console.log(this.props)\n\n                    // return <Redirect\n                    // to={{\n                    //     pathname: \"/\",\n                    //     state: {\n                    //         referrer: \"/signinpage\"\n                    //     }\n                    // }}\n                    // />\n                }>\n                */}\n                        {/* test button</Button> */}\n                        {/* If auth succeeded, render DeveloperView */}\n                        {this.state.isSignedIn ? (\n                            <Redirect\n                                to={{\n                                    pathname: \"/developerview\",\n                                    state: {\n                                        // name: this.state.name,\n                                        // email: this.state.email,\n                                        // photoUrl: this.state.photoUrl,\n                                        // emailVerified: this.state.emailVerified,\n                                        // idToken: this.state.idToken,\n                                        referrer: \"/signinpage\"\n                                    }\n                                }}\n                            />\n\n                            // <DeveloperView\n                            //     userName={firebase.auth().currentUser.displayName}\n                            //     signOutFunction={() => firebase.auth().signOut()}\n                            //     profileImgSrc={firebase.auth().currentUser.photoURL}\n                            // >\n                            // </DeveloperView>\n\n                        ) : (\n                                <StyledFirebaseAuth\n                                    uiConfig={this.uiConfig}\n                                    firebaseAuth={firebase.auth()}\n                                />\n                            )\n                        }\n                    </Typography>\n                </Container>\n            </React.Fragment> // </div>\n        )\n    }\n}\n\nexport default SigninPage;\n\n\n\n        // React and related libraries\n        // import React from 'react'\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link,\n//     Redirect,\n//     useHistory,\n//     useLocation\n// } from \"react-router-dom\";\n\n\n// function LoginPage() {\n//     let history = useHistory();\n//     let location = useLocation();\n\n//     let { from } = location.state || { from: { pathname: \"/\" } };\n//     let login = () => {\n//         authentication.authenticate(() => {\n//             history.replace(from);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <p>You must log in to view the page at {from.pathname}</p>\n//             <button onClick={login}>Log in</button>\n//         </div>\n//     );\n// }\n\n// export default LoginPage;\n// //   export default withRouter(withStyles(styles, { withTheme: true })(LoginPage))\n","// React\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  // BrowserRouter as Router,\n  // Switch, Route, \n  // Redirect,\n  // useHistory, useLocation,\n  withRouter,\n  // Link\n} from \"react-router-dom\";\n\n\n// Material UI\nimport {\n  makeStyles, useTheme\n  // styled \n} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport LockIcon from '@material-ui/icons/Lock'\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n// Firebase\nimport firebase from \"firebase\"\n\n// Pages\n// import Dashboard from '../../pages/Dashboard';\n// import { ViewContext } from '../../utils/viewContext';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction Sidebar(props) {\n\n\n  // let user = {\n  //   name: '',\n  //   email: '',\n  //   photoUrl: '',\n  //   emailVerified: '',\n  //   uid: '', // The user's ID, unique to the Firebase project. Do NOT use\n  //   // this value to authenticate with your backend server, if\n  //   // you have one. Use User.getToken() instead.\n  //   idToken: ''\n  // }\n\n  // Get current user's info \n\n  // firebase.auth().onAuthStateChanged(function (currentUser) {\n  //   if (currentUser) {\n  //     // User is signed in.\n  //     console.log('\\n Sidebar sees user :', currentUser.displayName, currentUser.email, currentUser.photoURL, currentUser.emailVerified, currentUser.uid)\n  //     // user.name = currentUser.displayName;\n  //     // console.log('\\n Saved user name initial: ', user.name);\n  //     // user.name = currentUser.displayName;\n  //     // console.log('\\n Saved user name final: ', user.name);\n  //     // console.log(this.user.name); // this does not work\n\n  //     user.name = currentUser.displayName;\n  //     user.email = currentUser.email;\n  //     user.photoUrl = currentUser.photoURL;\n  //     user.emailVerified = currentUser.emailVerified;\n  //     user.idToken = currentUser.getIdToken();\n\n  //     console.log('\\n Saved user info: ', user);\n  //   } else {\n  //     // No user is signed in.\n  //     console.log('\\n There is no authenticated user right now.')\n  //   }\n  // })\n\n  // forcing synch\n  //     function setUserInfo () {\n  //       return new Promise(\n  //     )}\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // const CustomLink = styled('link')({\n  //   textDecoration: NONAME,\n  //   color: 'primary',\n  // })\n\n  const [open, setOpen] = React.useState(false);\n\n  // Keep using this\n  // console.log(\"\\n Sidebar received these props : \", props); // Functional components use props, not this.props\n\n  // firebase.auth().onAuthStateChanged(currentUser => {currentUser.displayName} )\n\n  // console.log(' \\n Sidebar sees this user outside of the firebase function :', user)\n  // On load, save user info\n  // let testuser = firebase.auth().currentUser;  //This returns null even if sign in\n  // console.log(testuser);\n  // let name, email, photoUrl, uid, emailVerified, idToken;\n\n  // console.log('\\n current user: ', user)\n\n  // if (user != null) {\n  //   name = user.displayName;\n  //   email = user.email;\n  //   photoUrl = user.photoURL;\n  //   emailVerified = user.emailVerified;\n  //   uid = user.uid;  // The user's ID, unique to the Firebase project. Do NOT use\n  //   // this value to authenticate with your backend server, if\n  //   // you have one. Use User.getToken() instead.\n  //   idToken = user.getIdToken();\n  // }\n\n  // console.log('\\n Current user info: ', name, email, photoUrl, emailVerified, idToken)\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // let routeChange = (newUrl) => {\n  //   this.history.push(newUrl);\n  // };\n  /*  \n    const handleClickEvent = (buttonText) => {\n      switch (buttonText) {\n        case 'Dashboard':\n          console.log('\\n You clicked ', buttonText);\n          console.log('Sidebar sees props.history : ', props.history);\n          break;\n        case 'Submit Issue':\n          console.log('\\n You clicked ', buttonText);\n          console.log('Sidebar sees props.history : ', props.history);\n  \n          // Per https://stackoverflow.com/questions/44121069/how-to-pass-params-with-history-push-link-redirect-in-react-router-v4\n          // props.history.push({\n          //   pathname: '/developerview',\n          //   state: { activeView: buttonText }\n          // }) \n          // This did not work.\n  \n          // Alternative suggestion\n          // <Link to={{\n          //   pathname: '/template',\n          //   search: '?query=abc',\n          //   state: { detail: response.data }\n          // }}> My Link </Link> \n  \n          // props.history.push(\"/developerview\");\n          break;\n        case 'Review Issues':\n          console.log('\\n You clicked ', buttonText);\n          console.log('Sidebar sees props.history : ', props.history);\n          break;\n        default:\n          console.log('What did you even click? ', buttonText);\n          console.log('Sidebar sees props.history : ', props.history);\n      }\n    }\n  */\n\n  // let testprint = 10000;\n  // console.log(props.context)\n  return (\n    // <ViewContext.Consumer>\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {props.name}\n          </Typography>\n\n          <Toolbar disableGutters>\n            <Typography variant=\"h6\" className={classes.title}>\n              Bug Tracker\n          </Typography>\n            <div style={{ flex: 1 }} />\n            <Tooltip id=\"tooltip-icon1\" title=\"Sign out\">\n              <IconButton\n                name=\"signout\"\n                aria-label=\"Sign In\"\n                color=\"inherit\"\n                onClick={() => {\n                  firebase.auth().signOut(); // sign out of user session\n                  props.history.push('/'); // redirect to LandingPage\n                }}\n                rel=\"noopener\"\n              >\n                <LockIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip id=\"tooltip-icon2\" title=\"GitHub repository\">\n              <IconButton\n                name=\"github\"\n                aria-label=\"Open Github\"\n                color=\"inherit\"\n                href=\"https://github.com/danninemx/project-issue-manager\"\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                <GitHubIcon />\n              </IconButton>\n            </Tooltip>\n          </Toolbar>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Dashboard', 'Submit Issue', 'User Profile', 'Organization Profile', 'Project Profile'].map((text, index) => (\n            <ListItem button key={text}\n              // onClick={props.someFunction // This works.\n              onClick={\n                () => {\n                  // text === 'Submit Issue' ? props.showSubmitIssue() : props.showDashboard()\n                  switch (text) {\n                    case 'Dashboard':\n                      props.showDashboard()\n                      break;\n\n                    case 'Submit Issue':\n                      props.showSubmitIssue()\n                      break;\n\n                    case 'User Profile':\n                      props.showUserProfile()\n                      break;\n\n                    case 'Organization Profile':\n                      props.showOrganizationProfile()\n                      break;\n\n                    case 'Project Profile':\n                      props.showProjectProfile()\n                      break;\n\n                    default:\n                      console.log('I am Error')\n                  }\n                }\n\n                // onClick={props.changeName // This works.\n                // onClick={props.determineView // meh\n\n                // console.log(`\\n Sidebar says you clicked ${text} `)\n                // text == 'Submit Issue' ? props.showSubmitIssue : alert('what?')\n\n                // let nextPath = '/' + text.split(' ').join('').trim().toLowerCase();\n                // console.log(`\\n Sidebar says you clicked ${nextPath} `)\n                // (nextPath === '/submitissue') ? props.showSubmitIssue : false\n                // props.determineView(nextPath);\n\n                // onClick={() => console.log(props)\n                // () => {\n                // let nextPath = '/' + text.split(' ').join('').toLowerCase();\n                // console.log(`\\n Sidebar says you clicked ${nextPath} `);\n\n                // props.history.push({\n                //   pathname: '/developerview',\n                //   state: { activeView: nextPath}\n                // });\n\n                // return <Redirect\n                //   to={{\n                //     pathname: \"/developerview\",\n                //     state: { activeView: nextPath }\n                //   }} />\n                // }\n              }\n            >\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n            // </Link>\n            // </CustomLink>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n\n      {/* <Link to={{\n          pathname: '/template',\n          search: '?query=abc',\n          state: { detail: response.data }\n        }}> My Link </Link>  */}\n\n      {props.children}\n    </div>\n    // </ViewContext.Consumer>\n  );\n}\n\n// withRouter allows routing out to LandingPage on signout\nexport default withRouter(Sidebar)\n","// React\nimport React\n, {\n    Component,\n    // useState\n}\n    from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// Material UI\nimport {\n    // makeStyles, // used in functional component\n    // useStyles, // Stateful Components cannot use Hooks such as useStyles.\n    withStyles\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport API from '../../utils/API';\n\nconst styles = theme => ({\n    // const styles = makeStyles(theme => ({\n    // const useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n\n        alignItems: 'center',\n        // justifyContent: 'flex-end',\n        // justifyContent: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        // width: `calc(100% - 240px)`,\n        paddingLeft: 240,\n        paddingTop: '12vh',\n\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n\n    wrapper: {\n        position: 'relative',\n    },\n    button: {\n        margin: theme.spacing(1),\n    }\n})\n\nclass UserProfile extends Component {\n    // function SubmitIssue(props) {\n\n    constructor(props) {\n        super(props);\n        // State updater function to be passed down into the context provider per https://reactjs.org/docs/context.html\n        this.state = {\n            // name: this.props.name,\n            // email: this.props.email,\n            // type: 'Technical'\n        }\n    }\n\n    handleFieldChange = (event) => {\n        // for a regular input field, read field name and value from the event\n        const fieldId = event.target.id;\n        const fieldValue = event.target.value;\n        // this.props.onChange(fieldName, fieldValue); // could use if updating parent state\n        // this.state.onChange(fieldName, fieldValue);\n\n        // console.log(fieldId, fieldValue);\n        this.setState(\n            { [fieldId]: fieldValue }\n        ); // this works\n        // this.setState({ testObj: { [fieldId]: fieldValue } }); // not rly. keeps adding indexed\n\n        // this.setState({\n        //         testArr: [\n        //             // ...this.state.testArr, \n        //             {\n        //                 [fieldId]: fieldValue\n        //             }\n        //         ]\n\n        //     }\n\n        // }); // \n        // console.log('handle field change :', this.state); // this will be one step slower\n    }\n\n    clearState = () => {\n        this.setState({\n            ...this.state,\n            // required\n            userType: 'User',\n\n            // implement later for devs\n            organization: '',\n            project: '',\n            subject: '',\n            description: '',\n            owner: '',\n\n            // This is string here but DB stores it as array\n            comment: '',\n\n            // optional in current scope\n            url: '',\n            status: '',\n            resolved: '',\n            priority: '',\n            targetResolutionDate: '',\n            potentialImpact: '',\n            image: '',\n            partImpacted: ''\n        })\n    };\n    //  onChange = e => {\n    //     const { name, value } = e.target;\n    //     setState(prevState => ({ ...prevState, [name]: value }));\n    //   };\n\n    // handleReset = e => {\n    //     e.preventDefault();\n    //     signupUser().then(this.clearState);\n    // };\n\n    getUser = () => {\n\n        // ***** This is hitting controller's getUsers, not findOneUser. //\n        API.findOneUser(\n            this.props.email\n        )\n            .then(res => {\n                res.data ?\n                    console.log('returned :', res.data[0])\n                    // this.setState({\n                    //   books: res.data\n                    // })\n                    : console.log('no one!', res.data)\n            })\n            .catch(() =>\n                this.setState({\n                    message: \"No results. Please try another query.\"\n                })\n            );\n    }\n\n    saveUser = () => {\n        API.createUser({\n            email: this.props.email,\n            displayName: this.props.name,\n            // first word in display name\n            firstName: this.props.name.split(' ')[0],\n            // last word in display name\n            lastName: this.props.name.split(' ')[this.props.name.split(' ').length - 1],\n            photoURL: this.props.photoURL,\n            userType: this.props.userType\n        }).then(() => this.getUser())\n\n        // API.saveBook({\n        //     googleId: book.id,\n        //     title: book.volumeInfo.title,\n        //     subtitle: book.volumeInfo.subtitle,\n        //     link: book.volumeInfo.infoLink,\n        //     authors: book.volumeInfo.authors,\n        //     description: book.volumeInfo.description,\n        //     image: book.volumeInfo.imageLinks.thumbnail\n        //   }).then(() => this.getBooks());\n    }\n\n    componentDidUpdate() {\n        console.log('component did update :', this.state);\n    }\n\n    render() {\n        this.getUser();\n        const { classes } = this.props;\n        return (\n            <form className={classes.container} noValidate autoComplete=\"off\" >\n                <div>\n                    <Typography variant='body2'>Asterisk(*) denotes required fields.</Typography>\n                    <br />\n                    {/* first and last name are computed, not entered */}\n                    <TextField\n                        id=\"name\"\n                        disabled\n                        label=\"Your Name\"\n                        placeholder=\"John Doe\"\n                        className={classes.textField}\n                        defaultValue={this.props.name}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        id=\"email\"\n                        disabled\n                        label=\"Your Email\"\n                        defaultValue={this.props.email}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        id=\"userType\"\n                        required\n                        label=\"User / Developer\"\n                        defaultValue={this.props.userType}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                    <TextField\n                        id=\"photoURL\"\n                        label=\"Profile Photo (URL)\"\n                        value={this.props.photoURL}\n                        style={{ margin: 8 }}\n                        // placeholder=\"Placeholder\"\n                        // helperText=\"What seems to be the trouble?\"\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                </div>\n                <div className='button-group'>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        endIcon={<RotateLeftIcon>Reset Form</RotateLeftIcon>}\n                        onClick={\n                            // this.props.handleSubmitIssue(this.state.testArr) // causes loop SA\n                            () => {\n                                console.log('clicked reset while state is', this.state)\n                                // this.props.handleSubmitIssue()\n                                this.clearState()\n                            }\n                        }\n                    > Reset Form\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        endIcon={<Icon>send</Icon>}\n                        onClick={() => alert('I do nothing yet')\n                            // this.createIssue\n                            /*\n                            // this.props.handleSubmitIssue(this.state.testArr) // causes loop SA\n                            () => {\n                                console.log('clicked button', this.state)\n\n                                const keys = [\n                                    \"type\",\n                                    \"organization\",\n                                    \"project\",\n                                    \"subject\",\n                                    \"description\",\n                                    \"comment\",\n                                    \"owner\",\n\n                                    // optional in this version\n                                    \"url\",\n                                    \"status\",\n                                    \"resolved\",\n                                    \"priority\",\n                                    \"targetResolutionDate\",\n                                    \"potentialImpact\",\n                                    \"image\",\n                                    \"partImpacted\"\n                                ]\n\n                                // Loop through keys and get values\n                                // let values = keys.map(\n                                    // (key) => {\n                                for (let key of keys) {\n                                    // this.props.handleSubmitIssue(key, this.state[key]) // works\n\n                                }\n                                    // }\n                                    // console.log(this.state[key]) // works\n                                // )\n\n                                // this.props.handleSubmitIssue(values)\n\n\n                            }\n                            */\n                        }\n                    > Submit\n                    </Button>\n                </div>\n\n            </form >\n        )\n\n    }\n}\n\n// export default withRouter(SubmitIssue)\nexport default withRouter(withStyles(styles, { withTheme: true })(UserProfile))\n","// React\nimport React\n, {\n    Component,\n    // useState\n}\n    from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// Material UI\nimport {\n    // makeStyles, // used in functional component\n    // useStyles, // Stateful Components cannot use Hooks such as useStyles.\n    withStyles\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport API from '../../utils/API';\n\nconst styles = theme => ({\n    // const styles = makeStyles(theme => ({\n    // const useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n\n        alignItems: 'center',\n        // justifyContent: 'flex-end',\n        // justifyContent: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        // width: `calc(100% - 240px)`,\n        paddingLeft: 240,\n        paddingTop: '12vh',\n\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n\n    wrapper: {\n        position: 'relative',\n    },\n    button: {\n        margin: theme.spacing(1),\n    }\n})\n\nclass OrganizationProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // name: this.props.name,\n            // email: this.props.email,\n            // type: 'Technical'\n        }\n    }\n\n    handleFieldChange = (event) => {\n        // for a regular input field, read field name and value from the event\n        const fieldId = event.target.id;\n        const fieldValue = event.target.value;\n        // this.props.onChange(fieldName, fieldValue); // could use if updating parent state\n        // this.state.onChange(fieldName, fieldValue);\n\n        // console.log(fieldId, fieldValue);\n        this.setState(\n            { [fieldId]: fieldValue }\n        ); // this works\n        // this.setState({ testObj: { [fieldId]: fieldValue } }); // not rly. keeps adding indexed\n\n        // this.setState({\n        //         testArr: [\n        //             // ...this.state.testArr, \n        //             {\n        //                 [fieldId]: fieldValue\n        //             }\n        //         ]\n\n        //     }\n\n        // }); // \n        // console.log('handle field change :', this.state); // this will be one step slower\n    }\n\n    clearState = () => {\n        this.setState({\n            ...this.state,\n            // required\n            orgName: '',\n            orgDescription: '',\n            orgUrl: '',\n            member: [this.props.id]\n            // userType: 'User',\n            // implement later for devs\n            // project: '',\n            // subject: '',\n            // description: '',\n            // owner: '',\n\n            // This is string here but DB stores it as array\n            // comment: '',\n\n            // optional in current scope\n            // url: '',\n            // status: '',\n            // resolved: '',\n            // priority: '',\n            // targetResolutionDate: '',\n            // potentialImpact: '',\n            // image: '',\n            // partImpacted: ''\n        })\n    };\n\n    getAllOrgs = () => {\n        // console.log('do me')\n    }\n\n    getOneOrg = () => {\n        // API.findOneUser(\n        //     this.props.email\n        // )\n        //     .then(res => {\n        //         res.data ?\n        //             console.log('returned :', res.data[0])\n        //             // this.setState({\n        //             //   books: res.data\n        //             // })\n        //             : console.log('no one!', res.data)\n        //     })\n        //     .catch(() =>\n        //         this.setState({\n        //             message: \"No results. Please try another query.\"\n        //         })\n        //     );\n    }\n\n    saveOrg = () => {\n        API.createOrganization({\n            name: this.state.orgName,\n            description: this.state.orgDescription,\n            url: this.state.orgUrl,\n            member: [this.props.id]\n        }).then(() => console.log('Org saved.'))\n    }\n\n    componentDidUpdate() {\n        console.log('component did update :', this.state);\n    }\n\n    render() {\n        // this.getAllOrgs();\n        const { classes } = this.props;\n        return (\n            <form className={classes.container} noValidate autoComplete=\"off\" >\n                <div>\n                    <Typography variant='body2'>Asterisk(*) denotes required fields.</Typography>\n                    <br />\n                    {/* first and last name are computed, not entered */}\n                    <TextField\n                        id=\"orgName\"\n                        required\n                        fullWidth\n                        label=\"Provider Name\"\n                        value={this.state.orgName}\n                        // className={classes.textField} // disabled for full width\n                        // defaultValue={this.props.name}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                        style={{ margin: 8 }}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField\n                        id=\"orgDescription\"\n                        fullWidth\n                        label=\"Description\"\n                        value={this.state.orgDescription}\n                        style={{ margin: 8 }}\n                        // placeholder=\"Placeholder\"\n                        // className={classes.textField} // adding this will break css\n                        // helperText=\"What seems to be the trouble?\"\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                    <TextField\n                        id=\"orgUrl\"\n                        fullWidth\n                        label=\"URL\"\n                        value={this.state.orgUrl}\n                        style={{ margin: 8 }}\n                        // placeholder=\"Placeholder\"\n                        // className={classes.textField} // adding this will break css\n                        // helperText=\"What seems to be the trouble?\"\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                </div>\n                <div className='button-group'>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        endIcon={<RotateLeftIcon>Reset Form</RotateLeftIcon>}\n                        onClick={\n                            // this.props.handleSubmitIssue(this.state.testArr) // causes loop SA\n                            () => {\n                                console.log('clicked reset while state is', this.state)\n                                // this.props.handleSubmitIssue()\n                                this.clearState()\n                            }\n                        }\n                    > Reset Form\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        endIcon={<Icon>send</Icon>}\n                        onClick={this.saveOrg\n                            // console.log('clicked button', this.state)\n\n                        }\n                    > Submit\n                    </Button>\n                </div>\n\n            </form >\n        )\n\n    }\n}\n\n// export default withRouter(SubmitIssue)\nexport default withRouter(withStyles(styles, { withTheme: true })(OrganizationProfile))\n","// React\nimport React\n, {\n    Component,\n    // useState\n}\n    from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// Material UI\nimport {\n    // makeStyles, // used in functional component\n    // useStyles, // Stateful Components cannot use Hooks such as useStyles.\n    withStyles\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport API from '../../utils/API';\n\nconst styles = theme => ({\n    // const styles = makeStyles(theme => ({\n    // const useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n\n        alignItems: 'center',\n        // justifyContent: 'flex-end',\n        // justifyContent: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        // width: `calc(100% - 240px)`,\n        paddingLeft: 240,\n        paddingTop: '12vh',\n\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n\n    wrapper: {\n        position: 'relative',\n    },\n    button: {\n        margin: theme.spacing(1),\n    }\n})\n\n// Per https://material-ui.com/components/selects/ , needed for normal implement but can't use hooks..?\n// const inputLabel = React.useRef(null);\n// React.useEffect(() => {\n//     setLabelWidth(inputLabel.current.offsetWidth);\n// }, []);\n\n// var Hello = \n// });\n\nclass ProjectProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // name: this.props.name,\n            // email: this.props.email,\n            // type: 'Technical'\n        }\n    }\n\n    handleFieldChange = (event) => {\n        // for a regular input field, read field name and value from the event\n        const fieldId = event.target.id;\n        const fieldValue = event.target.value;\n        // this.props.onChange(fieldName, fieldValue); // could use if updating parent state\n        // this.state.onChange(fieldName, fieldValue);\n\n        // console.log(fieldId, fieldValue);\n        this.setState(\n            { [fieldId]: fieldValue }\n        ); // this works\n        // this.setState({ testObj: { [fieldId]: fieldValue } }); // not rly. keeps adding indexed\n\n        // this.setState({\n        //         testArr: [\n        //             // ...this.state.testArr, \n        //             {\n        //                 [fieldId]: fieldValue\n        //             }\n        //         ]\n\n        //     }\n\n        // }); // \n        // console.log('handle field change :', this.state); // this will be one step slower\n    }\n\n    handleOrgSelect = event => {\n        console.log('selected org target: ', event.target)\n        // console.log(this.state.organizationNames.indexOf(event.target.value)) // check index by name\n        let ind = this.state.organizationNames.indexOf(event.target.value)\n        // console.log(this.state.organizationList[ind]) // shows the object at index\n        // this.setState({org: event.target.value})\n        // console.log(Object.keys(this.state.organizationList[ind])) // shows array containing just the key from the object\n        // console.log(Object.keys(this.state.organizationList[ind])[0]) // that in a string\n        let selectedId = Object.keys(this.state.organizationList[ind])[0];\n        console.log('selected org:', selectedId);\n        this.setState({ orgId: selectedId });\n    };\n\n    handleProjSelect = event => {\n        console.log('select proj target: ', event.target)\n        let ind = this.state.projectNames.indexOf(event.target.value)\n        // console.log(this.state.projectList[ind]) // shows the object at index\n        // console.log(Object.keys(this.state.projectList[ind])) // shows array containing just the key from the object\n        // console.log(Object.keys(this.state.projectList[ind])[0]) // that in a string\n        let selectedId = Object.keys(this.state.projectList[ind])[0];\n        console.log('selectted proj:', selectedId)\n        this.setState({ projId: selectedId }\n            // ,() => this.getAllProj())\n        )\n    };\n\n\n\n    clearState = () => {\n        this.setState({\n            ...this.state,\n            // project info\n            projId: '', // ObjectId of project\n            orgId: '', // ObjectId of org\n            projName: '', // unique\n            projDescription: '',\n\n            // version info\n            verId: '', // ObjectId of version\n            verName: '',\n            verDescription: '',\n            // Also needs project ObjectId as ref. Use id above\n\n            // cache\n            // organizationList: [], // should not be reset unless query auto restarts\n            // organizationNames: [], // should not be reset unless query auto restarts\n            projectList: [],\n            projectNames: [],\n            versionList: []\n        })\n    };\n\n    //------------------------//\n    // Organization functions //\n    //------------------------//\n    getAllOrgs = () => {\n        API.getOrgs() // works if {} is omitted\n            .then(orgs => { // hits w no params for query\n                console.log('API getOrgs returned: ', orgs.data);\n                let objects = orgs.data.map(obj => {\n                    return { [obj._id]: obj.name } // orgId : orgName\n                })\n                let names = orgs.data.map(obj => {\n                    return obj.name // orgId : orgName\n                })\n                this.setState({\n                    organizationList: objects,\n                    organizationNames: names\n                })\n            })\n            .then(()=>console.log('state after getAllOrg :', this.state))\n            .then(() => this.getAllProj()) // query matching projects on org select\n        // works but without parameters\n    }\n\n    // NEEDS DUPLICATION PREVENTION\n    saveOrg = () => {\n        API.createOrganization({\n            name: this.state.orgName,\n            description: this.state.orgDescription,\n            url: this.state.orgUrl,\n            member: [this.props.id] // user Id\n        }).then(() => console.log('Org saved.'))\n    }\n\n    //-------------------//\n    // Project functions //\n    //-------------------//\n\n    // test after version creation & query setup\n    saveProj = () => {\n        API.createProject({\n            name: this.state.projName,\n            description: this.state.projDescription,\n            organization: [this.state.orgId] // user Id\n        }).then(() => console.log('Org saved.'))\n    }\n\n    // ...?\n    getAllProj = () => {\n        API.getProjects(\n            {\n                organization: this.state.orgId\n            }\n        )\n            .then(proj => {\n                console.log('get all proj', proj);\n                let objects = proj.data.map(proj => {\n                    return { [proj._id]: proj.name } // projId : projName\n                })\n                let names = proj.data.map(proj => {\n                    return proj.name // projId : projName\n                })\n                this.setState({\n                    projectList: objects,\n                    projectNames: names\n                })\n            })\n            .then(()=>console.log('state after getAllProj :', this.state))\n            .catch(err => console.log(err));\n        // .then(this.getAllVers()) // query matching versions on proj select // works?\n    }\n\n    //-------------------//\n    // Version functions //\n    //-------------------//\n    getAllVers = () => {\n        API.getVersions({ project: this.state.projId })\n            .then(vers => console.log('get all vers', vers))\n    }\n\n    getOneVer = () => {\n        API.findOneVersion(this.state.verId)\n            .then(ver => console.log(ver))\n    }\n\n    saveVer = () => {\n        API.createVersion({\n            name: this.state.verName,\n            description: this.state.verDescription,\n            project: this.state.projId // project Id as ref\n        }).then(() => console.log('Org saved.'))\n    }\n\n    // makeOrgList = () => {\n    //     let names = this.state.organizationList.map((org, ind) => {\n    //         // let k = Object.keys(this.state.organizationList[ind])[0] // get the key at index of ind\n    //         let k = Object.keys(org)[ind]\n    //         console.log(k)\n    //         // return this.state.organizationList[k]\n    //         return k\n    //     })\n    //     // return ('here', names)\n    //     // console.log(names)\n    //     // this.setState({ organizationNames: names })\n    // }\n\n    componentDidMount() {\n        this.getAllOrgs() // adds to state the list of org objects and array of org names\n        // this.getAllProj()\n\n    }\n\n    componentDidUpdate() {\n        // this.makeOrgList()\n\n\n        console.log('component did update :', this.state);\n        // console.log('component did update :', this.state.organizationList[0]);\n        // console.log('component did update :', Object.keys(this.state.organizationList[0])); // gives you key at index.. in an array\n        // console.log('component did update :', Object.keys(this.state.organizationList[0])[0]); // gives you key at index!\n        // let k = Object.keys(this.state.organizationList[ind])[0] // key at index ind\n        // let len = this.state.organizationList.length; // # of orgs\n\n        // let k = Object.keys(this.state.organizationList[ind])[0] // key at index ind\n        // this.setState({ organizationNames: names })\n\n        // console.log('I got :', \n\n        // )\n        // console.log('component did update :', this.state.organizationList[0][k]); // gives you val at index (org name)\n        // console.log('component did update :', this.state.organizationList[0][Object.keys(this.state.organizationList[0])[0]]);\n\n    }\n\n    // Object.keys(obj) gets array of keys in obj\n\n\n\n\n    render() {\n        // this.getAllOrgs();\n        const { classes } = this.props;\n\n\n\n        return (\n            <form className={classes.container} noValidate autoComplete=\"off\" >\n                <div>\n                    <Typography variant='body2'>Asterisk(*) denotes required fields.</Typography>\n                    <br />\n                    {/* START BY SELECTING ORG > PROJ > VER */}\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel\n                            // ref={inputLabel} \n                            id=\"demo-simple-select-outlined-label\">\n                            Provider\n                            </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            // id={this.state.orgId || \"demo-simple-select-outlined\"}\n                            id={\"demo-simple-select-outlined\"}\n                            placeholder='Provider Name'\n                            onChange={this.handleOrgSelect\n                                // this.handleFieldChange // not reading correctly?\n                                // this.setState({ event.target.value })\n\n                            }\n                        // labelWidth={'500px'}\n                        >\n                            {\n                                this.state.organizationNames ?\n                                    this.state.organizationNames.map((org, ind) =>\n                                        // <option key={org.key} value={org.key}>{org.value}</option>\n                                        <MenuItem\n                                            id={Object.keys(this.state.organizationList[ind])[0]}\n                                            key={org}\n                                            name={org}\n                                            value={org}>\n                                            {/* error: you have provided an out-of-range value `undefined` for the select component. */}\n                                            {org}\n                                        </MenuItem>\n                                    )\n                                    : () => console.log('state during MenuItem render', this.state)\n                                // None should not be an option. Create org first if missing.\n                            }\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        id=\"orgId\"\n                        // REMEMBER, LIST IS FOR NAME BUT SAVES ID\n                        disabled\n                        fullWidth\n                        label=\"Provider ID\"\n                        value={this.state.orgId}\n                        style={{ margin: 8 }}\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n\n                    {/* project */}\n\n\n                    <FormControl variant=\"outlined\"\n                        className={classes.formControl}\n                    // {this.state.projectList ? null : disabled}\n                    >\n                        <InputLabel\n                            // ref={inputLabel} \n                            id=\"demo-simple-select-outlined-label-proj\">\n                            Select Project\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-outlined-label-proj\"\n                            // id={this.state.orgId || \"demo-simple-select-outlined\"}\n                            id={\"demo-simple-select-outlined-proj\"}\n                            placeholder='Project Name'\n                            // value={this.state.orgName}\n                            onChange={\n                                // onOpen={ // doesn't work but unsure if due to choice\n                                // this.handleFieldChange // not reading correctly?\n                                // this.setState({ event.target.value })\n                                this.handleProjSelect\n                            }\n                        // labelWidth={'500px'}\n                        >\n                            {\n                                this.state.projectNames ?\n                                    this.state.projectNames.map((proj, ind) =>\n                                        // <option key={org.key} value={org.key}>{org.value}</option>\n                                        <MenuItem\n                                            id={Object.keys(this.state.projectList[ind])[0]}\n                                            key={proj}\n                                            name={proj}\n                                            value={proj}>\n                                            {proj}\n                                        </MenuItem>\n                                    )\n                                    : <br />\n                                // None should not be an option. Create org first if missing.\n                            }\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        id=\"projName\"\n                        required\n                        fullWidth\n                        label=\"Project/Product Name\"\n                        value={this.state.projName}\n                        // className={classes.textField} // disabled for full width\n                        // defaultValue={this.props.name}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                        style={{ margin: 8 }}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField\n                        id=\"projId\"\n                        // REMEMBER, LIST IS FOR NAME BUT SAVES ID\n                        disabled\n                        fullWidth\n                        label=\"Project ID\"\n                        value={this.state.projId}\n                        style={{ margin: 8 }}\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                    <TextField\n                        id=\"projDescription\"\n                        fullWidth\n                        label=\"Description\"\n                        value={this.state.projDescription}\n                        style={{ margin: 8 }}\n                        // placeholder=\"Placeholder\"\n                        // className={classes.textField} // adding this will break css\n                        // helperText=\"What seems to be the trouble?\"\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n\n                </div>\n                <div>\n                    <TextField\n                        id=\"verName\"\n                        required\n                        fullWidth\n                        label=\"Version / Specification Name\"\n                        // className={classes.textField} // disabled for full width\n                        value={this.state.verName || '(not applicable)'}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                        style={{ margin: 8 }}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField\n                        id=\"verDescription\"\n                        fullWidth\n                        label=\"Description\"\n                        value={this.state.orgDescription}\n                        style={{ margin: 8 }}\n                        // placeholder=\"Placeholder\"\n                        // className={classes.textField} // adding this will break css\n                        // helperText=\"What seems to be the trouble?\"\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        onChange={this.handleFieldChange.bind(this)}\n                    />\n                </div>\n                <div className='button-group'>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        endIcon={<RotateLeftIcon>Reset Form</RotateLeftIcon>}\n                        onClick={\n                            // this.props.handleSubmitIssue(this.state.testArr) // causes loop SA\n                            () => {\n                                console.log('clicked reset while state is', this.state)\n                                // this.props.handleSubmitIssue()\n                                this.clearState()\n                            }\n                        }\n                    > Reset Form\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        endIcon={<Icon>send</Icon>}\n                        onClick={\n                            () => {\n                                // FOR NOW, CREATE ONLY.\n                                // ADD UPDATE FEATURE LATER.\n                                alert('not ready')\n                                // this.getAllOrgs()\n                                // this.saveOrg()\n                                // this.saveVer()\n                                // console.log('clicked button', this.state)\n                            }\n\n                        }\n                    > Submit\n                    </Button>\n                </div>\n\n            </form >\n        )\n\n    }\n}\n\n// export default withRouter(SubmitIssue)\nexport default withRouter(withStyles(styles, { withTheme: true })(ProjectProfile))\n","import React, { Component } from 'react';\nimport {\n    // BrowserRouter as Router, Switch, Route, Redirect, useHistory, useLocation, withRouter, Link\n} from \"react-router-dom\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nimport Sidebar from '../../components/Sidebar';\nimport Dashboard from '../Dashboard';\nimport SubmitIssue from '../SubmitIssue';\nimport UserProfile from '../UserProfile';\nimport OrganizationProfile from '../OrganizationProfile';\nimport ProjectProfile from '../ProjectProfile';\n\n// Auth\nimport firebase from \"firebase\";\n\nimport API from '../../utils/API'\n// import isSignedIn from '../../utils/isSignedIn';\n\n\nconst styles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n}))\n\nclass DeveloperView extends Component {\n\n    constructor(props) {\n        super(props);\n        // State updater function to be passed down into the context provider per https://reactjs.org/docs/context.html\n        this.toggleTheme = () => {\n            this.setState(state => ({\n                // \n            }));\n        }\n\n        // this.routeChange = this.routeChange.bind(this); // if you have a func outside of state, you can make it part of state by doing this\n\n        // Set default auth state of false\n        this.state = {\n            activeView: 'Dashboard',\n            isSignedIn: false,\n            // isAuthenticated: false,\n\n            // user info\n            id: \"\",\n            email: \"\",\n            name: \"\", // Separate first and last name later\n            userType: \"\",\n\n            // issue: {} or []?\n            // required\n\n            type: 'Technical', // issue type, not user\n            organization: '',\n            project: '',\n            subject: '',\n            description: '',\n            comment: [],\n            owner: '',\n\n            // optional in this version\n            url: '',\n            status: '',\n            resolved: '',\n            priority: '',\n            targetResolutionDate: '',\n            potentialImpact: '',\n            image: '',\n            partImpacted: ''\n        }\n\n        // This allows the functions to be passed via props.\n        this.getUser = this.getUser.bind(this);\n        this.determineView = this.determineView.bind(this);\n        this.showSubmitIssue = this.showSubmitIssue.bind(this);\n        this.showDashboard = this.showDashboard.bind(this);\n        this.handleSubmitIssue = this.handleSubmitIssue.bind(this);\n    };\n\n    //-----------//\n    // Functions //\n    //-----------//\n\n    // test only\n    changeName = () => {\n        this.setState({ name: 'Super Dan' })\n        alert('name changed!')\n    }\n\n    // test2\n    onChangeStudentName(e) {\n        this.setState({ name: e.target.value })\n    }\n\n    getUser = () => {\n        API.findOneUser(\n            this.props.email\n        )\n            .then(res => {\n                res.data ?\n                    console.log('returned :', res.data[0])\n                    // this.setState({\n                    //   books: res.data\n                    // })\n                    : console.log('no one!', res.data)\n            })\n            .catch(() =>\n                this.setState({\n                    message: \"No results. Please try another query.\"\n                })\n            );\n    }\n\n    showDashboard = () => {\n        this.setState({ activeView: 'Dashboard' })\n    }\n\n    showSubmitIssue = () => {\n        this.setState({ activeView: 'Submit Issue' })\n    }\n\n    showUserProfile = () => {\n        this.setState({ activeView: 'User Profile' })\n    }\n\n    showOrganizationProfile = () => {\n        this.setState({ activeView: 'Organization Profile' })\n    }\n\n    showProjectProfile = () => {\n        this.setState({ activeView: 'Project Profile' })\n    }\n\n    handldIssueChange = (event) => {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmitIssue = (key, val) => {\n        /*\n        let issue = {};\n        tempIssue = { ...this.state.issue }; // copy issue to prevent direct state update\n        console.log('copied state issue:', tempIssue)\n        if (this.state.issue.length) {\n            let keys = Object.keys(this.state.issue) // get array of keys in object\n            console.log(\"this issue's keys are \", keys) // array of strings            \n\n            // for (let ea in this.state.issue) { // iterate over key-value pairs in object and give value\n            // console.log('ea: ', ea) // object of key-val pairs\n            // this.handleUserSave(ea); // SAVE FULL OBJECT TO DB\n\n            for (let key in keys) { // iterate over key-value pairs in object and give value\n                // 'key' comes out ot be index num\n                console.log('For key ' + keys[key] + ', value is ', this.state.issue[keys[key]])\n                // console.log('ea[key]: ', ea[key])\n            }\n        }\n        */\n        // const keys = [\n        //     \"type\",\n        //     \"organization\",\n        //     \"project\",\n        //     \"subject\",\n        //     \"description\",\n        //     \"comment\",\n        //     \"owner\",\n\n        //     // optional in this version\n        //     \"url\",\n        //     \"status\",\n        //     \"resolved\",\n        //     \"priority\",\n        //     \"targetResolutionDate\",\n        //     \"potentialImpact\",\n        //     \"image\",\n        //     \"partImpacted\"\n        // ]\n\n        this.setState({ [key]: val })\n        //Object.keys(this.state) // may not secure sequence\n\n        // this.setState({ arr }) // update state of \"issue\" with new variable \"issue\"\n        // this.setState({ comment: [1, 2, \"3\"] }) // works\n        // this.setState({ [key]: value })\n        // this.setState({testArr: arr})\n\n    }\n\n    // can write promise this way\n    // function signupUser() {\n    //     return new Promise(resolve => {\n    //       setTimeout(resolve, 1000);\n    //     });\n    //   }\n    //   const handleSubmit = e => {\n    //     e.preventDefault();\n    //     signupUser().then(clearState);\n    //   };\n\n    determineView = (text) => {\n        // console.log(`\\n dev view got back `, text)\n        // this.setState({ received: text })\n        // if (this.props.activeView) {\n        //     // console.log('\\n DeveloperView sees this.props.activeView :', this.props.activeView);\n        // }\n        // let nextView;\n\n        // switch (this.props.activeView) {\n        //     case '/submitissue':\n        //         nextView = <SubmitIssue />\n        //         console.log(' nextView is: ', nextView);\n        //         this.setState({ activeView: 'Submit Issue' })\n        //         break;\n        //     default:\n        //         console.log('hitting default');\n        //         this.setState({ activeView: 'Dashboard' })\n        //         nextView = <Dashboard />\n        // }\n        // return nextView;\n    }\n\n    // Call this to run API method saveUser\n    handleUserSave = (user) => {\n        API.createUser({\n            // \"email\": user[Object.keys(user)[0]],\n            // \"firstName\": user[Object.keys(user)[1]],\n            // \"lastName\": user[Object.keys(user)[2]],\n            // \"photoURL\": user[Object.keys(user)[3]],\n            // \"submittedIssues\": user[Object.keys(user)[4]],\n            // \"userType\": user[Object.keys(user)[5]],\n            // \"affiliatedOrganization\": user[Object.keys(user)[6]],\n            // \"affiliatedProject\": user[Object.keys(user)[7]]\n        })\n        // .then(() => this.getBooks());\n\n        // WILL NEED QUALIFIER LATER\n        // const user = this.state.users.find(user => user.email === email);\n\n        // console.log(user[Object.keys(user)[0]]);\n        //     console.log(user[Object.keys(user)[1]]);\n        //     console.log(user[Object.keys(user)[2]]);\n        //     console.log(user[Object.keys(user)[3]]);\n        //     console.log(user[Object.keys(user)[4]]);\n        //     console.log(user[Object.keys(user)[5]]);\n        //     console.log(user[Object.keys(user)[6]]);\n        //     console.log(user[Object.keys(user)[7]])\n\n    };\n\n\n    // seed = () => {\n    //     for (let ea of this.state.seedUsers) { // array\n    //         // console.log('ea: ', ea) // object of key-val pairs\n    //         this.handleUserSave(ea); // SAVE FULL OBJECT TO DB\n\n    //         // let keys = Object.keys(ea) // array of keys\n    //         // console.log(\"this person's keys are \", keys) // array of strings\n\n    //         // for (let key in keys) { // iterate over key-value pairs in object and give value\n    //         //     // key comes out ot be index num\n    //         //     console.log('For key ' + keys[key] + ', value is ', ea[keys[key]])\n    //         //     // console.log('ea[key]: ', ea[key])\n    //         // }\n    //     }\n    // }\n\n    checkNewUser = (authEmail) => {\n        API.findOneUser(\n            // If an email was passed, use it. If not use state.\n            authEmail || this.state.email\n        )\n            .then(res => {\n                // If user is found, save id to state. \n                // If not, send user to user profile for user creation.\n                res.data ?\n                    // console.log('User found :', res.data[0]['_id']) // works\n                    this.setState({ 'id': res.data[0]['_id'] })\n                    :\n                    // console.log('User not found', res.data) // works\n                    this.showUserProfile();\n            })\n            .catch(() =>\n                this.setState({\n                    message: \"No results. Please try another query.\"\n                })\n            );\n    }\n\n    authenticate = () => {\n\n        firebase.auth().onAuthStateChanged(user => {\n            // console.log('\\n DeveloperView sees user :', user.displayName, user.email, user.photoURL, user.emailVerified, user.uid)\n\n            // Save signin data to state\n            this.setState({\n                name: user.displayName,\n                email: user.email,\n                photoURL: user.photoURL,\n                emailVerified: user.emailVerified,\n                idToken: user.getIdToken()\n            })\n\n            // Process new user\n            this.checkNewUser(user.email)\n        });\n    }\n    //------------------//\n    // End of functions //\n    //------------------//\n\n    //-------------------//\n    // Lifecycle methods //\n    //-------------------//\n\n    componentDidMount(props) {\n        // console.log(\"\\n DeveloperView received these props : \", this.props);\n        // console.log(\"\\n DeveloperView finally sees this state : \", this.state); // anti-design to update state with non-changing values\n\n        console.log('did mount. state =', this.state)\n\n        // get auth info\n        this.authenticate()\n\n        /*\n          let arr = new Array(10).fill(undefined).map((val, idx) => {\n            let user = {\n              firstName: Faker.name.firstName(),\n              lastName: Faker.name.lastName(),\n              profilePicture: Faker.image.avatar(),\n              lastSignedIn: moment(Faker.date.recent(45)).fromNow(),\n              latestPost: Faker.lorem.paragraphs(2, \" \")\n            };\n            return user;\n          });\n          this.setState({ users: arr });\n        */\n\n        // QUERY DB FOR USER'S RECORDS //\n\n        // FUNC SIFTS FOR ISSUES SUMMARY STATS //\n        //   {this.state.users.map(user => {\n        //     return <Card key={user.profilePicture} user={user} />;\n        //   })}\n    }\n\n    componentDidUpdate() {\n        // Keep using\n        // console.log('DeveloperView state has :', this.state);\n    }\n\n    render() {\n        const newView = this.state.activeView;\n        let view;\n\n        if (newView === 'Dashboard') {\n            view = <Dashboard />\n        } else if (newView === 'Submit Issue') {\n            view = <SubmitIssue\n                name={this.state.name}\n                email={this.state.email}\n                type={this.state.type}\n                handleSubmitIssue={this.handleSubmitIssue}\n            />\n        }\n        else if (newView === 'User Profile') {\n            view = <UserProfile\n                id={this.state.id}\n                name={this.state.name}\n                email={this.state.email}\n                userType={this.state.userType}\n                photoURL={this.state.photoURL}\n            />\n        }\n        else if (newView === 'Organization Profile') {\n            view = <OrganizationProfile\n                id={this.state.id}\n                name={this.state.name}\n                email={this.state.email}\n                userType={this.state.userType}\n            />\n        }\n        else if (newView === 'Project Profile') {\n            view = <ProjectProfile\n                id={this.state.id}\n            />\n        }\n\n        return (\n            <React.Fragment>\n                {console.log('state in render', this.state)}\n                {/* {this.seed()}  // this works but wont use now */}\n                <Sidebar\n                    name={this.state.name}\n                    changeName={this.changeName}\n                    determineView={this.determineView}\n                    showDashboard={this.showDashboard}\n                    showSubmitIssue={this.showSubmitIssue}\n                    showUserProfile={this.showUserProfile}\n                    showOrganizationProfile={this.showOrganizationProfile}\n                    showProjectProfile={this.showProjectProfile}\n                >\n                    {/* {this.props.children} // this works, kinda. */}\n                    {/* {this.determineView(this.props)} // doesn't work? */}\n                </Sidebar>\n                {view}\n                {/* <Dashboard /> */}\n            </React.Fragment>\n        );\n    }\n}\n\n// Stateful Components (Class) cannot use Hooks such as useStyle.\nexport default withStyles(styles)(DeveloperView);\n","import React, { Component, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router, Switch, Route,\n  // Link, \n  // Redirect, \n  useHistory\n  // useLocation, withRouter \n} from \"react-router-dom\";\n// import PropTypes from 'prop-types';\n\n// import { Helmet } from 'react-helmet' // manages document head\n\n// Pages\n// import LandingPage from \"./pages/LandingPage\"; // absorbed it here\nimport SubmitIssue from \"./pages/SubmitIssue\";\nimport Dashboard from \"./pages/Dashboard\";\n// import NoMatch from \"./pages/NoMatch\";\n\n// Material-UI\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport IconButton from '@material-ui/core/IconButton'\nimport LockIcon from '@material-ui/icons/Lock'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n// import { withStyles } from '@material-ui/core/styles'\nimport { makeStyles } from '@material-ui/core/styles'\nimport BugReportTwoToneIcon from '@material-ui/icons/BugReportTwoTone';\n\n// Styling\nimport \"./App.css\";\n\n// import session from 'express-session';\n\n// // Hashing. Later when I have to register a new user.\n// import bcrypt from 'bcrypt';\n// const saltRounds =10;\n\n// import Sidebar from \"./components/Sidebar\";\n// import LoginPage from \"./pages/LoginPage\";\nimport SigninPage from \"./pages/SigninPage\";\nimport DeveloperView from \"./pages/DeveloperView\";\n\n// Default style settings for Material UI\n// const styles = theme => ({ // This will cause error possibly because the outcome is not being exported anywhere using withStyles.\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  root: {\n    flexGrow: 1,\n    flex: '1 0 100%'\n    // height: '100%',\n    // overflow: 'hidden'\n  },\n  hero: {\n    height: '100%',\n    // minHeight: '80vh',\n    flex: '0 0 auto',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.type === 'light' ? theme.palette.primary.dark : theme.palette.primary.main\n  },\n  text: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    letterSpacing: '.7rem',\n    textIndent: '.7rem',\n    fontWeight: theme.typography.fontWeightLight,\n    [theme.breakpoints.only('xs')]: {\n      fontSize: 24,\n      letterSpacing: '.1em',\n      textIndent: '.1rem'\n    },\n    whiteSpace: 'nowrap'\n  },\n  h5: {\n    paddingLeft: theme.spacing(1) * 4,\n    paddingRight: theme.spacing(1) * 4,\n    marginTop: theme.spacing(1),\n    maxWidth: 600,\n    textAlign: 'center',\n    [theme.breakpoints.only('xs')]: {\n      fontSize: 18\n    }\n  },\n  content: {\n    height: '100%',\n    // paddingTop: theme.spacing(1) * 8,\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(1)\n    }\n  },\n  button: {\n    marginTop: theme.spacing(1) * 3,\n    marginLeft: theme.spacing(1) * 3,\n    marginRight: theme.spacing(1) * 3,\n  },\n  // buttonGroup: {\n  //   marginLeft: theme.spacing(1) * 3,\n  //   marginRight: theme.spacing(1) * 3\n  // },\n  logo: {\n    color: 'secondary',\n    margin: `${theme.spacing(1) * 3}px 0 ${theme.spacing(1) * 4}px`,\n    width: '100%',\n    height: '40vw',\n    maxHeight: 250\n  },\n  steps: {\n    maxWidth: theme.spacing(1) * 130,\n    margin: 'auto'\n  },\n  step: {\n    padding: `${theme.spacing(1) * 3}px ${theme.spacing(1) * 2}px`\n  },\n  stepIcon: {\n    marginBottom: theme.spacing(1)\n  },\n  markdownElement: {},\n  cardsContent: {\n    padding: 15,\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    [theme.breakpoints.only('xs')]: {\n      width: '100%',\n      padding: 0,\n      paddingTop: 15\n    }\n  },\n  card: {\n    minWidth: 275,\n    // maxWidth: 350,\n    maxWidth: \"50%\",\n    margin: 15,\n    [theme.breakpoints.only('xs')]: {\n      width: '100%',\n      margin: 0,\n      marginTop: 7\n    }\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  cardTitle: {\n    marginBottom: 16,\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n}))\n\nclass App extends Component {\n  // constructor(props) {\n  //   super(props);\n  constructor() {\n    super();\n\n    // Bind the this context to the handler function\n    this.handler = this.handler.bind(this);\n    // this.handleSignIn = this.handleSignIn.bind(this);\n\n    // Set default auth state of false\n    this.state = {\n      isAuthenticated: false,\n    };\n  }\n  // state = {\n  //   user: {\n  //     email: '',\n  //     firstName: '',\n  //     lastName: '',\n  //     organization: '',\n  //     affiliatedProducts: [],\n  //   },\n  // issues: {\n  //   submitted: [],\n  //   assigned: [],\n  // },\n  // };\n\n  // This method will be sent to the child component\n  handler() {\n    this.setState({\n      isAuthenticated: true\n    })\n    alert('Welcome, user!');\n  }\n\n\n  handleSignIn() {\n    this.setState({\n      isAuthenticated: true\n    })\n    alert('Welcome, user!');\n  }\n\n  handleSignOut() {\n    this.setState({\n      isAuthenticated: false\n    })\n  }\n\n  // authentication = {\n  //   // isAuthenticated: true, // Once actual authentication is implemented, change this to \"false\".\n  //   authenticate(callback) {\n  //     this.isAuthenticated = true;\n  //   },\n  //   signout(callback) {\n  //     this.isAuthenticated = false;\n  //   }\n  // }\n\n\n  ProtectedRoute = ({ children, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={children}\n      // ({ location }) => fakeAuth.isAuthenticated ? (\n      //   children\n      // ) : (\n      //   <Redirect\n      //     to={{\n      //       pathname: \"/login\",\n      //       state: { from: location }\n      //     }}\n      // />\n      // )\n      // }\n      />\n    );\n  }\n\n  // A wrapper for <Route> that redirects to the login screen if you're not yet authenticated.\n  // ProtectedRoute = ({ children, ...rest }) => {\n  //   return (\n  //     <Route\n  //       {...rest}\n  //       // If authenticated, use the children route. If not, send to login.\n  //       render={({ location }) =>\n  //         this.state.isAuthenticated ? (\n  //           children\n  //         ) : (\n  //             <Redirect\n  //               to={{\n  //                 pathname: \"/signinpage\",\n  //                 state: { from: location }\n  //               }}\n  //             />\n  //           )\n  //       }\n  //     />\n  //   );\n  // }\n\n\n\n  AuthenticateButton = () => {\n    let history = useHistory();\n\n    return this.authentication.isAuthenticated ? (\n      <p>\n        Welcome!{\" \"}\n        <button\n          onClick={() => {\n            this.authentication.signout(() => history.push(\"/\"));\n          }}\n        >\n          Sign out\n        </button>\n      </p>\n    ) : (\n        <p>You are not logged in.</p>\n      );\n  }\n\n  // LoginPage = () => {\n  //   let history = useHistory();\n  //   let location = useLocation();\n\n  //   // \n  //   let { from } = location.state || { from: { pathname: \"/\" } };\n  //   let login = () => {\n  //     this.authentication.authenticate(() => {\n  //       history.replace(from);\n  //     });\n  //   };\n\n  //   return (\n  //     <div>\n  //       <p>You must log in to view the page at {from.pathname}</p>\n  //       <button onClick={login}>Log in</button>\n  //     </div>\n  //   );\n  // }\n\n\n  LandingPage = ({\n    // classes, \n    history, theme }) => {\n    const classes = useStyles();\n    const isAuthorised = () => {\n      try {\n        const key = Object.keys(localStorage).find(e => e.match(/persist:root/))\n        const data = JSON.parse(localStorage.getItem(key))\n        const auth = JSON.parse(data.auth)\n\n        return auth && auth.isAuthorised\n      } catch (ex) {\n        return false\n      }\n    }\n\n    useEffect(() => {\n      if (isAuthorised()) {\n        history.push('/signin')\n      }\n    })\n\n    return (\n      <div className={classes.main}>\n        {/* <Helmet>\n        <meta name=\"theme-color\" content={theme.palette.primary.main} />\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content={theme.palette.primary.main} />\n        <meta name=\"msapplication-navbutton-color\" content={theme.palette.primary.main} />\n        <title>Bug Tracker</title>\n      </Helmet> */}\n\n        <AppBar position=\"static\">\n\n          <Toolbar disableGutters>\n            <Typography variant=\"h6\" className={classes.title}>\n              Bug Tracker\n          </Typography>\n            <div style={{ flex: 1 }} />\n            <Tooltip id=\"tooltip-icon1\" title=\"Sign in\">\n              <IconButton\n                name=\"signin\"\n                aria-label=\"Open Github\"\n                color=\"inherit\"\n                onClick={() => {\n                  history.push('/signin')\n                }}\n                rel=\"noopener\"\n              >\n                <LockIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip id=\"tooltip-icon2\" title=\"GitHub repository\">\n              <IconButton\n                name=\"github\"\n                aria-label=\"Open Github\"\n                color=\"inherit\"\n                href=\"https://github.com/danninemx/project-issue-manager\"\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                <GitHubIcon />\n              </IconButton>\n            </Tooltip>\n          </Toolbar>\n        </AppBar>\n        {/* End of Navbar */}\n\n        <div className={classes.root}>\n          <div className={classes.hero}>\n            <div className={classes.content}>\n\n              {/* <img src=\"/rmw.svg\" alt=\"Material-UI Logo\" className={classes.logo} /> */}\n              <BugReportTwoToneIcon alt=\"Material-UI Logo\" className={classes.logo} />\n              <div className={classes.text}>\n                <Typography\n                  variant=\"h3\"\n                  align=\"center\"\n                  component=\"h1\"\n                  color=\"inherit\"\n                  gutterBottom\n                  className={classes.title}\n                >\n                  {'Bug Tracker'}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" color=\"inherit\" gutterBottom className={classes.h5}>\n                  {'For all bug control needs, from submission to resolution.'}\n                </Typography>\n\n                <div className={classes.buttonGroup}>\n                  <Button\n                    onClick={() => {\n                      // Direct user to issue submission page through Router's history object\n                      history.push('/submitissue')\n                    }}\n                    className={classes.button}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    {'Report an Issue'}\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      // Direct user to signin page through Router's history object\n                      history.push('/signinpage')\n                    }}\n                    className={classes.button}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    {'Log into Account'}\n                  </Button>\n                </div>\n              </div>\n\n              <div className={classes.cardsContent}>\n                <Card className={classes.card}>\n                  <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                      What is this app?\n                  </Typography>\n                    <Typography noWrap={false} color=\"textSecondary\">\n                      <br></br>\n                      {`This is an open source bug tracker system.`}\n                      <br></br>\n                      {`It's free. Setup takes less than 5 minutes.`}\n                      <br></br>\n                      {`Whether you are reporting or fixing a bug, we got you covered. `}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      onClick={() => {\n                        history.push('/signin')\n                      }}\n                    >\n                      Get started\n                  </Button>\n                  </CardActions>\n                </Card>\n                {/* End of  */}\n\n                <Card className={classes.card}>\n                  <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                      Want to test it out on desktop?\n                  </Typography>\n                    <br />\n                    <Typography>{'Paste this in Node command line:'}</Typography>\n                    <br />\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                      {' '}\n                      git clone https://github.com/danninemx/project-issue-manager{' '}\n                      <br></br>\n                      {' '}\n                      npm i  #or yarn{' '}\n                      <br></br>\n                      {' '}\n                      npm start  #or yarn run start{' '}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      onClick={() => {\n                        let win = window.open('https://github.com/danninemx/project-issue-manager', '_blank')\n                        win.focus()\n                      }}\n                    >\n                      Learn More\n                  </Button>\n                  </CardActions>\n                </Card>\n              </div>\n\n              {/* End of cardsContent */}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount = () => {\n    // console.log(' landing props: ', this.props)\n    // console.log('landing state: ', this.state)\n  }\n\n  componentDidUpdate = () => {\n    // console.log(' landing props: ', this.props)\n    // console.log('landing state: ', this.state)\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={this.LandingPage} />\n            <Route exact path=\"/signinpage\" handler={this.handler} component={SigninPage} />\n            {/* <SigninPage handler={this.handler} */}\n            <Route exact path=\"/submitissue\" component={SubmitIssue} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/developerview\">\n              <DeveloperView />\n            </Route>\n            {/* <Route path=\"*\" component={NoMatch} /> */}\n\n          </Switch>\n        </div>\n      </Router >\n    )\n  }\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}