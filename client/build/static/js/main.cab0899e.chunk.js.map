{"version":3,"sources":["pages/SubmitIssue/SubmitIssue.js","pages/Dashboard/Dashboard.js","pages/SigninPage/SigninPage.js","components/Sidebar/Sidebar.js","utils/API.js","pages/DeveloperView/DeveloperView.js","App.js","registerServiceWorker.js","index.js"],"names":["styles","makeStyles","theme","container","Object","objectSpread","display","flexWrap","alignItems","justifyContent","padding","spacing","mixins","toolbar","textField","marginLeft","marginRight","width","content","flexGrow","SubmitIssue","state","classes","react_default","a","createElement","Fragment","CssBaseline","Container","maxWidth","className","TextField","id","label","style","margin","placeholder","helperText","fullWidth","InputLabelProps","shrink","defaultValue","Component","withRouter","withStyles","withTheme","useStyles","cardsContent","defineProperty","paddingTop","paddingLeft","breakpoints","only","card","minWidth","marginTop","wideCard","mouseEntered","color","mouseLeft","bullet","transform","cardTitle","marginBottom","fontSize","pos","Dashboard","Card","CardContent","Typography","variant","component","CardActions","Button","size","onClick","window","open","focus","Link","console","log","require","config","firebase","initializeApp","apiKey","authDomain","SigninPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","GithubAuthProvider","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","componentDidMount","onAuthStateChanged","user","setState","isSignedIn","componentDidUpdate","setPersistence","Auth","Persistence","SESSION","then","catch","error","concat","code","message","handler","react_router","to","pathname","referrer","StyledFirebaseAuth_default","firebaseAuth","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","up","_clsx3","_clsx4","useTheme","_React$useState","React","useState","_React$useState2","slicedToArray","setOpen","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Menu_default","noWrap","name","disableGutters","title","flex","Tooltip","signOut","history","push","rel","Lock_default","href","target","GitHub_default","Drawer","paper","direction","ChevronRight_default","ChevronLeft_default","Divider","List","map","text","index","ListItem","button","key","changeName","ListItemIcon","MoveToInbox_default","Mail_default","ListItemText","primary","children","API","getUsers","q","axios","get","params","createUser","userData","post","findOneUser","deleteUser","delete","getIssues","DeveloperView","alert","handleUserSave","seed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","seedUsers","Symbol","iterator","next","done","ea","value","err","return","toggleTheme","methodInDeveloperView","determineView","nextView","activeView","pages_SubmitIssue_SubmitIssue","Dashboard_Dashboard","_this2","displayName","email","photoUrl","photoURL","emailVerified","idToken","getIdToken","Sidebar_Sidebar","_title","main","flexDirection","hero","height","backgroundColor","palette","background","type","dark","letterSpacing","textIndent","fontWeight","typography","fontWeightLight","h5","paddingRight","textAlign","logo","maxHeight","steps","step","stepIcon","markdownElement","App","ProtectedRoute","_ref","rest","objectWithoutProperties","assign","render","AuthenticateButton","useHistory","authentication","isAuthenticated","signout","LandingPage","_ref2","useEffect","keys","localStorage","find","e","match","data","JSON","parse","getItem","isAuthorised","ex","BugReportTwoTone_default","alt","align","gutterBottom","buttonGroup","bind","assertThisInitialized","react_router_dom","toString","exact","path","pages_DeveloperView_DeveloperView","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cab0899e.chunk.js","sourcesContent":["// React\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// Material UI\nimport {\n    makeStyles,\n    // useStyles, // Stateful Components cannot use Hooks such as useStyles.\n    withStyles\n} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\n\n// Components\n// import Sidebar from '../../components/Sidebar';\n\nconst styles = makeStyles(theme => ({\n    // const useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nclass SubmitIssue extends Component {\n    state = {};\n\n    render() {\n        const classes = styles;\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <Container maxWidth='lg'>\n                    {/* <Sidebar /> */}\n                    <div className={classes.content}>\n                        <TextField\n                            id=\"standard-full-width\"\n                            label=\"Label\"\n                            style={{ margin: 8 }}\n                            placeholder=\"Placeholder\"\n                            helperText=\"Full width!\"\n                            fullWidth\n                            margin=\"normal\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                        <TextField\n                            label=\"None\"\n                            id=\"margin-none\"\n                            defaultValue=\"Default Value\"\n                            className={classes.textField}\n                            helperText=\"Some important text\"\n                        />\n                        <TextField\n                            label=\"Dense\"\n                            id=\"margin-dense\"\n                            defaultValue=\"Default Value\"\n                            className={classes.textField}\n                            helperText=\"Some important text\"\n                            margin=\"dense\"\n                        />\n                        <TextField\n                            label=\"Normal\"\n                            id=\"margin-normal\"\n                            defaultValue=\"Default Value\"\n                            className={classes.textField}\n                            helperText=\"Some important text\"\n                            margin=\"normal\"\n                        />\n                    </div>\n                </Container >\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles, { withTheme: true })(SubmitIssue))\n","//React\r\nimport React from 'react'\r\n\r\n// Material UI\r\nimport Button from '@material-ui/core/Button';\r\n// import Group from '@material-ui/icons/Group';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  // withStyles, \r\n  makeStyles,\r\n  // useTheme \r\n} from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n// Other modules\r\n// import CountUp from 'react-countup'\r\n// import { injectIntl } from 'react-intl'\r\n// import { withFirebase } from 'firekit-provider'\r\n// import { Line, Bar, Doughnut } from 'react-chartjs-2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  // const styles = makeStyles(theme => ({\r\n  // root: {\r\n  //   align: 'center',\r\n  //   display: 'flex',\r\n  // },\r\n  cardsContent: {\r\n    // padding: 15,\r\n    paddingTop: 90,\r\n    paddingLeft: 15,\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    flexWrap: 'wrap',\r\n    [theme.breakpoints.only('xs')]: {\r\n      width: '100%',\r\n      padding: 0,\r\n      // paddingTop: 15\r\n      paddingTop: 60,\r\n      paddingLeft: 0,\r\n\r\n    }\r\n  },\r\n  card: {\r\n    minWidth: \"37vw\",\r\n    // maxWidth: 350,\r\n    maxWidth: \"50%\",\r\n    margin: 15,\r\n    [theme.breakpoints.only('xs')]: {\r\n      minWidth: 275,\r\n      width: '100%',\r\n      margin: 0,\r\n      marginTop: 7\r\n    },\r\n    // \"&:last-child\": {\r\n    //   marginTop: 25,\r\n    // }\r\n  },\r\n  wideCard: {\r\n    minWidth: \"90%\",\r\n    // maxWidth: 350,\r\n    maxWidth: \"90%\",\r\n    margin: 15,\r\n    [theme.breakpoints.only('xs')]: {\r\n      width: '100%',\r\n      margin: 0,\r\n      marginTop: 7\r\n    },\r\n  },\r\n  mouseEntered: {\r\n    color: \"red\",\r\n  },\r\n  mouseLeft: {\r\n    color: \"black\",\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)'\r\n  },\r\n  cardTitle: {\r\n    marginBottom: 16,\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n}))\r\n\r\nfunction Dashboard() {\r\n  /*\r\n    let state = {\r\n      // This tells the AppBar which menu to highlight, maybe.\r\n      currentPage: \"\",\r\n  \r\n      // Submitted, In progress, Resolved, Closed...\r\n      counts: {\r\n        submitted: 5,\r\n        reviewed: 1,\r\n        resolved: 1,\r\n        closed: 3\r\n      },\r\n  \r\n      latestIssue: {},\r\n  \r\n      // Status updates in sentence form: MM/DD/YY hh:mm - ${assignee} ${action description} (Issue #${###-###-###-###})\r\n      // Give thoughts on the issue number structure.\r\n      notifications: []\r\n    };\r\n  */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.cardsContent}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Organization Summary\r\n          </Typography>\r\n            <br />\r\n            <Typography>{'Paste this in Node command line:'}</Typography>\r\n            <br />\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              <br></br>\r\n              Submitted:\r\n              {/* {this.state.counts.submitted} */}\r\n              {' '}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              size=\"small\"\r\n              onClick={() => {\r\n                let win = window.open('https://github.com/danninemx/project-issue-manager', '_blank')\r\n                win.focus()\r\n              }}\r\n            >\r\n              Learn More\r\n          </Button>\r\n          </CardActions>\r\n        </Card>\r\n\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              My Issues\r\n          </Typography>\r\n            <br />\r\n            <Typography>{'Paste this in Node command line:'}</Typography>\r\n            <br />\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              <br></br>\r\n              Submitted:\r\n              {/* {this.state.counts.submitted} */}\r\n              {' '}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              size=\"small\"\r\n              onClick={() => {\r\n                let win = window.open('https://github.com/danninemx/project-issue-manager', '_blank')\r\n                win.focus()\r\n              }}\r\n            >\r\n              Learn More\r\n          </Button>\r\n          </CardActions>\r\n        </Card>\r\n\r\n\r\n        <Card className={classes.wideCard}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Notifications\r\n          </Typography>\r\n            <br />\r\n            <Link\r\n              component=\"button\"\r\n              variant=\"body1\"\r\n              color=\"textPrimary\"\r\n              onClick={() => {\r\n                console.log(\"Some accessibility message here...\")\r\n                let win = window.open('https://github.com/danninemx/project-issue-manager', '_blank')\r\n                win.focus()\r\n              }}\r\n            >\r\n              {'DISPLAY AUTOMATED MESSAGES HERE (e.g. Like this)'}\r\n            </Link>\r\n            <br />\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              <br></br>\r\n              11/20/2019 03:30 PM - Someone did Something, Something and Something.\r\n              {/* {this.state.counts.submitted} */}\r\n              <br></br>\r\n              11/20/2019 03:30 PM - Someone did Something, Something and Something.\r\n\r\n              <br></br>\r\n              11/20/2019 03:30 PM - Someone did Something, Something and Something.\r\n\r\n              {' '}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n// export default withStyles(styles)(Dashboard);\r\nexport default Dashboard;","import React, { Component } from \"react\"\nimport firebase from \"firebase\"\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\nimport { Redirect } from 'react-router-dom'\n// import config from '../../../../config'\n\nimport Button from '@material-ui/core/Button';\n\n// import App from '../../App';\n// import DeveloperView from '../DeveloperView';\n\nrequire('dotenv').config();\n// If running in non-production environment, load .env variables\n// if (process.env.NODE_ENV !== 'production') {\n//     require('dotenv').config();\n// }\n\n// console.log(\"\\n Environment variables :\", process.env);\n// console.log(\"\\n Exported environment variables :\", config);\n\n// let API_Key = process.env.Firebase_apiKey;\n// console.log(\"\\n API_Key : \", config.API_KEY);\n\n// These credentials are necessary and safe to be exposed to the client, as true backend is provided by Firebase\nfirebase.initializeApp({\n    // Firebase Console > Project Settings > Your project > Web API Key\n    apiKey: \"AIzaSyCzm64_uz3vESpXIPdgcOeeSFouv-fT5Gw\",\n    // Firebase Console > Authentication > Authorized Domains\n    authDomain: \"project-issue-manager.firebaseapp.com\"\n\n})\n\nclass SigninPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // Set default auth state of false\n        this.state = {\n            isSignedIn: false,\n            // isAuthenticated: false,\n        };\n\n        // this.routeChange = this.routeChange.bind(this); //testing\n    }\n\n    /*\n    routeChange() { // testing\n        // let path = `/`;\n        // this.props.history.push(path);\n        // this.props.history.push({\n        //     pathname: path,\n        //     state: {isAuthenticated: true}\n        // })\n        <App\n            isAuthenticated='true' />\n    }\n    */\n\n    // state = { isSignedIn: false }; // signed out by default\n\n    // Firebase UI signin configuration\n    uiConfig = {\n        signInFlow: \"popup\",\n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n            firebase.auth.GithubAuthProvider.PROVIDER_ID,\n            firebase.auth.EmailAuthProvider.PROVIDER_ID\n        ],\n        callbacks: {\n            // Return false means user-determined redirect, not auto-redirect.\n            signInSuccessWithAuthResult: () => {\n                // Determine here whether this is new user. \n                // If so, open details page.\n                // If not, proceed to appropriate data view.\n                return false;\n            }\n        }\n    }\n\n    componentDidMount = () => {\n\n        firebase.auth().onAuthStateChanged(user => {\n            this.setState({\n                // Coerce the value to be a boolean regardless of original type\n                isSignedIn: !!user\n            });\n            // console.log('this.props is :', this.props);\n            // console.log('this.props.handler is :', this.props.handler);\n            // console.log(\"\\n SigninPage sees this state : \", this.state);\n\n\n            // console.log('this.props.handleSignIn is :', this.props.handleSignIn);\n            // console.log('SigninPage sees \"isSignin\" in state : ', this.state.isSignedIn);\n            // console.log(\"SigninPage sees this user : \", user);\n        })\n\n\n    }\n\n    componentDidUpdate = () => {\n        // console.log('this.props.handler is :', this.props.handler)\n\n\n        // Consider adding \"keep me signed in\" checkbox which will enable this\n\n        // Change persistence from local storage to session storage\n        // Per https://firebase.google.com/docs/auth/web/auth-state-persistence\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\n            .then(function () {\n                // Existing and future Auth states are now persisted in the current\n                // session only. Closing the window would clear any existing state even\n                // if a user forgets to sign out.\n                // ...\n                // New sign-in will be persisted with session persistence.}\n            })\n            .catch(function (error) {\n                // Handle Errors here.\n                // let errorCode = error.code;\n                // let errorMessage = error.message;\n                console.log(`\\n error code : ${error.code}`,\n                    `\\n error message : ${error.message}`)\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h3>Please sign in to proceed.</h3>\n                <h4>(If you do not have an account, one will be created for you.)</h4>\n                <Button onClick={this.props.handler}>\n                    {/*\n                    // this.routeChange\n                    \n                    // <Redirect\n                    //     to={{\n                    //         pathname: \"/\",\n                    //         state: {\n                    //             isAuthenticated: true,\n                    //             referrer: \"/signinpage\"\n                    //         }\n                    //     }}\n                    // />\n\n\n\n                    // this.props.handler();\n\n                    // this.props.history.push({\n                    //     pathname: '/',\n                    //     state: { isAuthenticated: true }\n                    // }); // redirect to LandingPage\n\n                    // console.log(this.props)\n\n                    // return <Redirect\n                    // to={{\n                    //     pathname: \"/\",\n                    //     state: {\n                    //         referrer: \"/signinpage\"\n                    //     }\n                    // }}\n                    // />\n                }>\n                */}\n                    test button</Button>\n                {/* If auth succeeded, render DeveloperView */}\n                {this.state.isSignedIn ? (\n                    <Redirect\n                        to={{\n                            pathname: \"/developerview\",\n                            state: {\n                                // name: this.state.name,\n                                // email: this.state.email,\n                                // photoUrl: this.state.photoUrl,\n                                // emailVerified: this.state.emailVerified,\n                                // idToken: this.state.idToken,\n                                referrer: \"/signinpage\"\n                            }\n                        }}\n                    />\n\n                    // <DeveloperView\n                    //     userName={firebase.auth().currentUser.displayName}\n                    //     signOutFunction={() => firebase.auth().signOut()}\n                    //     profileImgSrc={firebase.auth().currentUser.photoURL}\n                    // >\n                    // </DeveloperView>\n\n                ) : (\n                        <StyledFirebaseAuth\n                            uiConfig={this.uiConfig}\n                            firebaseAuth={firebase.auth()}\n                        />\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default SigninPage;\n\n\n\n// React and related libraries\n// import React from 'react'\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link,\n//     Redirect,\n//     useHistory,\n//     useLocation\n// } from \"react-router-dom\";\n\n\n// function LoginPage() {\n//     let history = useHistory();\n//     let location = useLocation();\n\n//     let { from } = location.state || { from: { pathname: \"/\" } };\n//     let login = () => {\n//         authentication.authenticate(() => {\n//             history.replace(from);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <p>You must log in to view the page at {from.pathname}</p>\n//             <button onClick={login}>Log in</button>\n//         </div>\n//     );\n// }\n\n// export default LoginPage;\n// //   export default withRouter(withStyles(styles, { withTheme: true })(LoginPage))\n","// React\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  // BrowserRouter as Router,\n  // Switch, Route, \n  // Redirect,\n  // useHistory, useLocation,\n  withRouter,\n  // Link\n} from \"react-router-dom\";\n\n\n// Material UI\nimport {\n  makeStyles, useTheme\n  // styled \n} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport LockIcon from '@material-ui/icons/Lock'\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n// Firebase\nimport firebase from \"firebase\"\n\n// Pages\n// import Dashboard from '../../pages/Dashboard';\n// import { ViewContext } from '../../utils/viewContext';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction Sidebar(props) {\n\n\n  // let user = {\n  //   name: '',\n  //   email: '',\n  //   photoUrl: '',\n  //   emailVerified: '',\n  //   uid: '', // The user's ID, unique to the Firebase project. Do NOT use\n  //   // this value to authenticate with your backend server, if\n  //   // you have one. Use User.getToken() instead.\n  //   idToken: ''\n  // }\n\n  // Get current user's info \n\n  // firebase.auth().onAuthStateChanged(function (currentUser) {\n  //   if (currentUser) {\n  //     // User is signed in.\n  //     console.log('\\n Sidebar sees user :', currentUser.displayName, currentUser.email, currentUser.photoURL, currentUser.emailVerified, currentUser.uid)\n  //     // user.name = currentUser.displayName;\n  //     // console.log('\\n Saved user name initial: ', user.name);\n  //     // user.name = currentUser.displayName;\n  //     // console.log('\\n Saved user name final: ', user.name);\n  //     // console.log(this.user.name); // this does not work\n\n  //     user.name = currentUser.displayName;\n  //     user.email = currentUser.email;\n  //     user.photoUrl = currentUser.photoURL;\n  //     user.emailVerified = currentUser.emailVerified;\n  //     user.idToken = currentUser.getIdToken();\n\n  //     console.log('\\n Saved user info: ', user);\n  //   } else {\n  //     // No user is signed in.\n  //     console.log('\\n There is no authenticated user right now.')\n  //   }\n  // })\n\n  // forcing synch\n  //     function setUserInfo () {\n  //       return new Promise(\n  //     )}\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // const CustomLink = styled('link')({\n  //   textDecoration: NONAME,\n  //   color: 'primary',\n  // })\n\n  const [open, setOpen] = React.useState(false);\n\n  // Keep using this\n  // console.log(\"\\n Sidebar received these props : \", props); // Functional components use props, not this.props\n\n  // firebase.auth().onAuthStateChanged(currentUser => {currentUser.displayName} )\n\n  // console.log(' \\n Sidebar sees this user outside of the firebase function :', user)\n  // On load, save user info\n  // let testuser = firebase.auth().currentUser;  //This returns null even if sign in\n  // console.log(testuser);\n  // let name, email, photoUrl, uid, emailVerified, idToken;\n\n  // console.log('\\n current user: ', user)\n\n  // if (user != null) {\n  //   name = user.displayName;\n  //   email = user.email;\n  //   photoUrl = user.photoURL;\n  //   emailVerified = user.emailVerified;\n  //   uid = user.uid;  // The user's ID, unique to the Firebase project. Do NOT use\n  //   // this value to authenticate with your backend server, if\n  //   // you have one. Use User.getToken() instead.\n  //   idToken = user.getIdToken();\n  // }\n\n  // console.log('\\n Current user info: ', name, email, photoUrl, emailVerified, idToken)\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // let routeChange = (newUrl) => {\n  //   this.history.push(newUrl);\n  // };\n  /*  \n    const handleClickEvent = (buttonText) => {\n      switch (buttonText) {\n        case 'Dashboard':\n          console.log('\\n You clicked ', buttonText);\n          console.log('Sidebar sees props.history : ', props.history);\n          break;\n        case 'Submit Issue':\n          console.log('\\n You clicked ', buttonText);\n          console.log('Sidebar sees props.history : ', props.history);\n  \n          // Per https://stackoverflow.com/questions/44121069/how-to-pass-params-with-history-push-link-redirect-in-react-router-v4\n          // props.history.push({\n          //   pathname: '/developerview',\n          //   state: { activeView: buttonText }\n          // }) \n          // This did not work.\n  \n          // Alternative suggestion\n          // <Link to={{\n          //   pathname: '/template',\n          //   search: '?query=abc',\n          //   state: { detail: response.data }\n          // }}> My Link </Link> \n  \n          // props.history.push(\"/developerview\");\n          break;\n        case 'Review Issues':\n          console.log('\\n You clicked ', buttonText);\n          console.log('Sidebar sees props.history : ', props.history);\n          break;\n        default:\n          console.log('What did you even click? ', buttonText);\n          console.log('Sidebar sees props.history : ', props.history);\n      }\n    }\n  */\n\n  // let testprint = 10000;\n  // console.log(props.context)\n  return (\n    // <ViewContext.Consumer>\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {props.name}\n          </Typography>\n\n          <Toolbar disableGutters>\n            <Typography variant=\"h6\" className={classes.title}>\n              Bug Tracker\n          </Typography>\n            <div style={{ flex: 1 }} />\n            <Tooltip id=\"tooltip-icon1\" title=\"Sign out\">\n              <IconButton\n                name=\"signout\"\n                aria-label=\"Sign In\"\n                color=\"inherit\"\n                onClick={() => {\n                  firebase.auth().signOut(); // sign out of user session\n                  props.history.push('/'); // redirect to LandingPage\n                }}\n                rel=\"noopener\"\n              >\n                <LockIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip id=\"tooltip-icon2\" title=\"GitHub repository\">\n              <IconButton\n                name=\"github\"\n                aria-label=\"Open Github\"\n                color=\"inherit\"\n                href=\"https://github.com/danninemx/project-issue-manager\"\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                <GitHubIcon />\n              </IconButton>\n            </Tooltip>\n          </Toolbar>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Dashboard', 'Submit Issue'].map((text, index) => (\n            // <Link href=\"#\" onClick={() => handleClickEvent(text)}>\n            // <Link\n            //   // <CustomLink\n            //   className={classes.title}\n            //   to={{\n            //     pathname: '/developerview',\n            //     state: {\n            //       activeView: text\n            //     }\n            //   }}>\n            <ListItem button key={text}\n              onClick={props.changeName\n                // () => {\n                // let nextPath = '/' + text.split(' ').join('').toLowerCase();\n                // console.log(`\\n Sidebar says you clicked ${nextPath} `);\n\n                // props.history.push({\n                //   pathname: '/developerview',\n                //   state: { activeView: nextPath}\n                // });\n\n\n\n                // return <Redirect\n                //   to={{\n                //     pathname: \"/developerview\",\n                //     state: { activeView: nextPath }\n                //   }} />\n                // }\n              }\n            >\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n            // </Link>\n            // </CustomLink>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n\n      {/* <Link to={{\n          pathname: '/template',\n          search: '?query=abc',\n          state: { detail: response.data }\n        }}> My Link </Link>  */}\n\n      {props.children}\n    </div>\n    // </ViewContext.Consumer>\n  );\n}\n\n// withRouter allows routing out to LandingPage on signout\nexport default withRouter(Sidebar)\n","import axios from \"axios\";\n\nexport default {\n  // axios test\n  // userTest: function (userData) {\n  //   console.log(`\\n testing axios call : `, userData);\n  //   return axios.get(\"/api/users\", userData);\n  // },\n\n  // Find all users meeting criteria\n  getUsers: function (q) {\n    console.log(`\\n getUsers is querying for : ${q}`);\n    return axios.get(\"/api/users\", { params: { q } });\n  },\n\n  // Saves a user to the database\n  createUser: function (userData) {\n    console.log(`\\n createUser is attempting to save : `, userData);\n    return axios.post(\"/api/users\", userData);\n  },\n\n  // Find one user meeting criteria.\n  // Can getUsers perform the same with right criteria? Also unsure of the composition\n  findOneUser: function (q) {\n    console.log(`\\n findOneUser is querying for : ${q}`);\n    return axios.post(\"/api/users/:id\", q);\n    // return axios.post(\"/api/users/:id\", q);\n  },\n\n  // Deletes the saved user with the given id\n  deleteUser: function (id) {\n    console.log(`\\n deleteUser is attempting to delete : ${id}`);\n    return axios.delete(\"/api/users/\" + id);\n  },\n\n  getIssues: function (q) {\n    console.log(`\\n getIssues is querying for : ${q}`);\n    return axios.get(\"/api/issues\", { params: { q } });\n  }\n\n};\n","import React, { Component } from 'react';\nimport {\n    // BrowserRouter as Router, Switch, Route, Redirect, useHistory, useLocation, withRouter, Link\n} from \"react-router-dom\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nimport Sidebar from '../../components/Sidebar';\nimport Dashboard from '../Dashboard';\nimport SubmitIssue from '../SubmitIssue';\nimport firebase from \"firebase\";\n\nimport API from '../../utils/API'\n// import isSignedIn from '../../utils/isSignedIn';\n\nconst styles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n}))\n\nclass DeveloperView extends Component {\n\n    constructor(props) {\n        super(props);\n        // State updater function to be passed down into the context provider per https://reactjs.org/docs/context.html\n        this.toggleTheme = () => {\n            this.setState(state => ({\n                // \n            }));\n        }\n\n        this.state = {\n            // activeView: 'Dashboard',\n            methodInDeveloperView: true, // test state\n            seedUsers: [\n                // {\n                // \"email\": \"dudkny@gmail.com\",\n                // \"firstName\": \"Danny\",\n                // \"lastName\": \"Kim\",\n                // \"userType\": \"developer\",\n                // \"photoURL\": \"google.com\",\n                // \"submittedIssues\": ['blah'],\n                // \"affiliatedOrganization\": ['test'],\n                // \"affiliatedProject\": ['play']\n                // }\n                // ,\n                // {\n                //     \"email\": \"test@user.com\",\n                //     \"firstName\": \"Test\",\n                //     \"lastName\": \"User\",\n                //     \"photoURL\": \"google.com\",\n                //     \"submittedIssues\": [],\n                //     \"userType\": \"user\",\n                //     \"affiliatedOrganization\": [],\n                //     \"affiliatedProject\": []\n                // }\n            ]\n        };\n\n        this.determineView = (props) => {\n            if (this.props.activeView) {\n                // console.log('\\n DeveloperView sees this.props.activeView :', this.props.activeView);\n            }\n            let nextView;\n\n            switch (this.props.activeView) {\n                case '/submitissue':\n                    nextView = <SubmitIssue />\n                    // console.log(' nextView is: ', nextView);\n                    break;\n                // case 'Review Issues':\n                //     nextView = <SubmitIssue /> // Add additional page later\n                //     break;\n                default:\n                    // console.log('hitting default');\n                    nextView = <Dashboard />\n            }\n            return nextView;\n        }\n    };\n\n    // test only\n    changeName = () => {\n        this.setState({ name: 'Super Dan' })\n        alert('name changed!')\n    }\n    // determineView = (view) => {\n    // Loop thru all children elements and \n    // Per https://reactjs.org/docs/react-api.html#reactchildren\n    // React.Children.map(this.props.children)\n    // };\n\n    // Call this to run API method saveUser\n    handleUserSave = (user) => {\n        // API.userTest({\n        API.createUser({\n            // user // Cannot save object\n\n            // email: '1@1.com',\n            // firstName: 'test f',\n            // lastName: 'test l',\n            // userType: 'a type'\n\n            // \"email\": user[Object.keys(user)[0]],\n            // \"firstName\": user[Object.keys(user)[1]],\n            // \"lastName\": user[Object.keys(user)[2]],\n            // \"photoURL\": user[Object.keys(user)[3]],\n            // \"submittedIssues\": user[Object.keys(user)[4]],\n            // \"userType\": user[Object.keys(user)[5]],\n            // \"affiliatedOrganization\": user[Object.keys(user)[6]],\n            // \"affiliatedProject\": user[Object.keys(user)[7]]\n\n            // email: user.email,\n            // firstName: user.firstName,\n            // lastName: user.lastName,\n            // photoURL: user.photoUrl,\n            // submittedIssues: user.submittedIssues,\n            // userType: user.userType,\n            // affiliatedOrganization: user.affiliatedOrganization,\n            // affiliatedProject: user.affiliatedProject\n        })\n        // .then(() => this.getBooks());\n\n        // WILL NEED QUALIFIER LATER\n        // const user = this.state.users.find(user => user.email === email);\n\n        // console.log(user[Object.keys(user)[0]]);\n        //     console.log(user[Object.keys(user)[1]]);\n        //     console.log(user[Object.keys(user)[2]]);\n        //     console.log(user[Object.keys(user)[3]]);\n        //     console.log(user[Object.keys(user)[4]]);\n        //     console.log(user[Object.keys(user)[5]]);\n        //     console.log(user[Object.keys(user)[6]]);\n        //     console.log(user[Object.keys(user)[7]])\n\n    };\n\n    seed = () => {\n        for (let ea of this.state.seedUsers) { // array\n            // console.log('ea: ', ea) // object of key-val pairs\n            this.handleUserSave(ea); // SAVE FULL OBJECT TO DB\n\n            // let keys = Object.keys(ea) // array of keys\n            // console.log(\"this person's keys are \", keys) // array of strings\n\n            // for (let key in keys) { // iterate over key-value pairs in object and give value\n            //     // key comes out ot be index num\n            //     console.log('For key ' + keys[key] + ', value is ', ea[keys[key]])\n            //     // console.log('ea[key]: ', ea[key])\n            // }\n        }\n    }\n\n    componentDidMount(props) {\n        // Keep using\n        // console.log(\"\\n DeveloperView received these props : \", this.props);\n\n        // console.log(\"\\n DeveloperView received this.props.children : \", this.props.children); // undefined\n        // console.log(\"DeveloperView received this.props.profileImgSrc : \", this.props.profileImgSrc);\n        // console.log(\"DeveloperView received this.props.userName : \", this.props.userName);\n        // console.log(\"DeveloperView received this.props.signOutFunction : \", this.props.signOutFunction);\n        // console.log(\"\\n DeveloperView finally sees this state : \", this.state); // anti-design to update state with non-changing values\n\n        // isSignedIn();\n\n        firebase.auth().onAuthStateChanged(user => {\n            // Keep using\n            // console.log('\\n DeveloperView sees user :', user.displayName, user.email, user.photoURL, user.emailVerified, user.uid)\n            this.setState({\n                name: user.displayName,\n                email: user.email,\n                photoUrl: user.photoURL,\n                emailVerified: user.emailVerified,\n                idToken: user.getIdToken()\n            })\n        });\n\n        // let newState = {\n        //     userName: this.props.userName,\n        //     signOutFunction: this.props.signOutFunction,\n        //     profileImgSrc: this.props.profileImgSrc,\n        //     activeView: this.determineView(props)\n        // }\n        // let newState = this.props; // This doesn't work.\n        // console.log('DeveloperView used props to make newState : ', newState);\n\n        // this.setState({ newState });\n        // this.setState(newState);\n\n        // console.log(\"DeveloperView later sees this state : \", this.state);\n        /*\n          let arr = new Array(10).fill(undefined).map((val, idx) => {\n            let user = {\n              firstName: Faker.name.firstName(),\n              lastName: Faker.name.lastName(),\n              profilePicture: Faker.image.avatar(),\n              lastSignedIn: moment(Faker.date.recent(45)).fromNow(),\n              latestPost: Faker.lorem.paragraphs(2, \" \")\n            };\n            return user;\n          });\n          this.setState({ users: arr });\n        */\n\n        // QUERY DB FOR USER'S RECORDS //\n\n        // FUNC SIFTS FOR ISSUES SUMMARY STATS //\n        //   {this.state.users.map(user => {\n        //     return <Card key={user.profilePicture} user={user} />;\n        //   })}\n    }\n\n    componentDidUpdate() {\n        // console.log('DeveloperView received state of :', this.props.location.state.detail);\n        // console.log('DeveloperView received props of :', this.props);\n\n        // Keep using\n        // console.log('DeveloperView state has :', this.state);\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.seed()}\n                <Sidebar\n                    name={this.state.name}\n                    changeName={this.changeName}\n                >\n                    {/* {this.props.children} // this works, kinda. */}\n                    {this.determineView(this.props)}\n                </Sidebar>\n                <Dashboard />\n            </React.Fragment>\n        );\n    }\n}\n\n// Stateful Components (Class) cannot use Hooks such as useStyle.\nexport default withStyles(styles)(DeveloperView);\n","import React, { Component, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router, Switch, Route,\n  // Link, \n  // Redirect, \n  useHistory\n  // useLocation, withRouter \n} from \"react-router-dom\";\n// import PropTypes from 'prop-types';\n\n// import { Helmet } from 'react-helmet' // manages document head\n\n// Pages\n// import LandingPage from \"./pages/LandingPage\"; // absorbed it here\nimport SubmitIssue from \"./pages/SubmitIssue\";\nimport Dashboard from \"./pages/Dashboard\";\n// import NoMatch from \"./pages/NoMatch\";\n\n// Material-UI\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport IconButton from '@material-ui/core/IconButton'\nimport LockIcon from '@material-ui/icons/Lock'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n// import { withStyles } from '@material-ui/core/styles'\nimport { makeStyles } from '@material-ui/core/styles'\nimport BugReportTwoToneIcon from '@material-ui/icons/BugReportTwoTone';\n\n// Styling\nimport \"./App.css\";\n\n// import session from 'express-session';\n\n// // Hashing. Later when I have to register a new user.\n// import bcrypt from 'bcrypt';\n// const saltRounds =10;\n\n// import Sidebar from \"./components/Sidebar\";\n// import LoginPage from \"./pages/LoginPage\";\nimport SigninPage from \"./pages/SigninPage\";\nimport DeveloperView from \"./pages/DeveloperView\";\n\n// Default style settings for Material UI\n// const styles = theme => ({ // This will cause error possibly because the outcome is not being exported anywhere using withStyles.\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  root: {\n    flexGrow: 1,\n    flex: '1 0 100%'\n    // height: '100%',\n    // overflow: 'hidden'\n  },\n  hero: {\n    height: '100%',\n    // minHeight: '80vh',\n    flex: '0 0 auto',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.type === 'light' ? theme.palette.primary.dark : theme.palette.primary.main\n  },\n  text: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    letterSpacing: '.7rem',\n    textIndent: '.7rem',\n    fontWeight: theme.typography.fontWeightLight,\n    [theme.breakpoints.only('xs')]: {\n      fontSize: 24,\n      letterSpacing: '.1em',\n      textIndent: '.1rem'\n    },\n    whiteSpace: 'nowrap'\n  },\n  h5: {\n    paddingLeft: theme.spacing(1) * 4,\n    paddingRight: theme.spacing(1) * 4,\n    marginTop: theme.spacing(1),\n    maxWidth: 600,\n    textAlign: 'center',\n    [theme.breakpoints.only('xs')]: {\n      fontSize: 18\n    }\n  },\n  content: {\n    height: '100%',\n    // paddingTop: theme.spacing(1) * 8,\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(1)\n    }\n  },\n  button: {\n    marginTop: theme.spacing(1) * 3,\n    marginLeft: theme.spacing(1) * 3,\n    marginRight: theme.spacing(1) * 3,\n  },\n  // buttonGroup: {\n  //   marginLeft: theme.spacing(1) * 3,\n  //   marginRight: theme.spacing(1) * 3\n  // },\n  logo: {\n    color: 'secondary',\n    margin: `${theme.spacing(1) * 3}px 0 ${theme.spacing(1) * 4}px`,\n    width: '100%',\n    height: '40vw',\n    maxHeight: 250\n  },\n  steps: {\n    maxWidth: theme.spacing(1) * 130,\n    margin: 'auto'\n  },\n  step: {\n    padding: `${theme.spacing(1) * 3}px ${theme.spacing(1) * 2}px`\n  },\n  stepIcon: {\n    marginBottom: theme.spacing(1)\n  },\n  markdownElement: {},\n  cardsContent: {\n    padding: 15,\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    [theme.breakpoints.only('xs')]: {\n      width: '100%',\n      padding: 0,\n      paddingTop: 15\n    }\n  },\n  card: {\n    minWidth: 275,\n    // maxWidth: 350,\n    maxWidth: \"50%\",\n    margin: 15,\n    [theme.breakpoints.only('xs')]: {\n      width: '100%',\n      margin: 0,\n      marginTop: 7\n    }\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  cardTitle: {\n    marginBottom: 16,\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n}))\n\nclass App extends Component {\n  // constructor(props) {\n  //   super(props);\n  constructor() {\n    super();\n\n    // Bind the this context to the handler function\n    this.handler = this.handler.bind(this);\n    // this.handleSignIn = this.handleSignIn.bind(this);\n\n    // Set default auth state of false\n    this.state = {\n      isAuthenticated: false,\n    };\n  }\n  // state = {\n  //   user: {\n  //     email: '',\n  //     firstName: '',\n  //     lastName: '',\n  //     organization: '',\n  //     affiliatedProducts: [],\n  //   },\n  // issues: {\n  //   submitted: [],\n  //   assigned: [],\n  // },\n  // };\n\n  // This method will be sent to the child component\n  handler() {\n    this.setState({\n      isAuthenticated: true\n    })\n    alert('Welcome, user!');\n  }\n\n\n  handleSignIn() {\n    this.setState({\n      isAuthenticated: true\n    })\n    alert('Welcome, user!');\n  }\n\n  handleSignOut() {\n    this.setState({\n      isAuthenticated: false\n    })\n  }\n\n  // authentication = {\n  //   // isAuthenticated: true, // Once actual authentication is implemented, change this to \"false\".\n  //   authenticate(callback) {\n  //     this.isAuthenticated = true;\n  //   },\n  //   signout(callback) {\n  //     this.isAuthenticated = false;\n  //   }\n  // }\n\n\n  ProtectedRoute = ({ children, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={children}\n      // ({ location }) => fakeAuth.isAuthenticated ? (\n      //   children\n      // ) : (\n      //   <Redirect\n      //     to={{\n      //       pathname: \"/login\",\n      //       state: { from: location }\n      //     }}\n      // />\n      // )\n      // }\n      />\n    );\n  }\n\n  // A wrapper for <Route> that redirects to the login screen if you're not yet authenticated.\n  // ProtectedRoute = ({ children, ...rest }) => {\n  //   return (\n  //     <Route\n  //       {...rest}\n  //       // If authenticated, use the children route. If not, send to login.\n  //       render={({ location }) =>\n  //         this.state.isAuthenticated ? (\n  //           children\n  //         ) : (\n  //             <Redirect\n  //               to={{\n  //                 pathname: \"/signinpage\",\n  //                 state: { from: location }\n  //               }}\n  //             />\n  //           )\n  //       }\n  //     />\n  //   );\n  // }\n\n\n\n  AuthenticateButton = () => {\n    let history = useHistory();\n\n    return this.authentication.isAuthenticated ? (\n      <p>\n        Welcome!{\" \"}\n        <button\n          onClick={() => {\n            this.authentication.signout(() => history.push(\"/\"));\n          }}\n        >\n          Sign out\n        </button>\n      </p>\n    ) : (\n        <p>You are not logged in.</p>\n      );\n  }\n\n  // LoginPage = () => {\n  //   let history = useHistory();\n  //   let location = useLocation();\n\n  //   // \n  //   let { from } = location.state || { from: { pathname: \"/\" } };\n  //   let login = () => {\n  //     this.authentication.authenticate(() => {\n  //       history.replace(from);\n  //     });\n  //   };\n\n  //   return (\n  //     <div>\n  //       <p>You must log in to view the page at {from.pathname}</p>\n  //       <button onClick={login}>Log in</button>\n  //     </div>\n  //   );\n  // }\n\n\n  LandingPage = ({\n    // classes, \n    history, theme }) => {\n    const classes = useStyles();\n    const isAuthorised = () => {\n      try {\n        const key = Object.keys(localStorage).find(e => e.match(/persist:root/))\n        const data = JSON.parse(localStorage.getItem(key))\n        const auth = JSON.parse(data.auth)\n\n        return auth && auth.isAuthorised\n      } catch (ex) {\n        return false\n      }\n    }\n\n    useEffect(() => {\n      if (isAuthorised()) {\n        history.push('/signin')\n      }\n    })\n\n    return (\n      <div className={classes.main}>\n        {/* <Helmet>\n        <meta name=\"theme-color\" content={theme.palette.primary.main} />\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content={theme.palette.primary.main} />\n        <meta name=\"msapplication-navbutton-color\" content={theme.palette.primary.main} />\n        <title>Bug Tracker</title>\n      </Helmet> */}\n\n        <AppBar position=\"static\">\n\n          <Toolbar disableGutters>\n            <Typography variant=\"h6\" className={classes.title}>\n              Bug Tracker\n          </Typography>\n            <div style={{ flex: 1 }} />\n            <Tooltip id=\"tooltip-icon1\" title=\"Sign in\">\n              <IconButton\n                name=\"signin\"\n                aria-label=\"Open Github\"\n                color=\"inherit\"\n                onClick={() => {\n                  history.push('/signin')\n                }}\n                rel=\"noopener\"\n              >\n                <LockIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip id=\"tooltip-icon2\" title=\"GitHub repository\">\n              <IconButton\n                name=\"github\"\n                aria-label=\"Open Github\"\n                color=\"inherit\"\n                href=\"https://github.com/danninemx/project-issue-manager\"\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                <GitHubIcon />\n              </IconButton>\n            </Tooltip>\n          </Toolbar>\n        </AppBar>\n        {/* End of Navbar */}\n\n        <div className={classes.root}>\n          <div className={classes.hero}>\n            <div className={classes.content}>\n\n              {/* <img src=\"/rmw.svg\" alt=\"Material-UI Logo\" className={classes.logo} /> */}\n              <BugReportTwoToneIcon alt=\"Material-UI Logo\" className={classes.logo} />\n              <div className={classes.text}>\n                <Typography\n                  variant=\"h3\"\n                  align=\"center\"\n                  component=\"h1\"\n                  color=\"inherit\"\n                  gutterBottom\n                  className={classes.title}\n                >\n                  {'Bug Tracker'}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" color=\"inherit\" gutterBottom className={classes.h5}>\n                  {'For all bug control needs, from submission to resolution.'}\n                </Typography>\n\n                <div className={classes.buttonGroup}>\n                  <Button\n                    onClick={() => {\n                      // Direct user to issue submission page through Router's history object\n                      history.push('/submitissue')\n                    }}\n                    className={classes.button}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    {'Report an Issue'}\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      // Direct user to signin page through Router's history object\n                      history.push('/signinpage')\n                    }}\n                    className={classes.button}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    {'Log into Account'}\n                  </Button>\n                </div>\n              </div>\n\n              <div className={classes.cardsContent}>\n                <Card className={classes.card}>\n                  <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                      What is this app?\n                  </Typography>\n                    <Typography noWrap={false} color=\"textSecondary\">\n                      <br></br>\n                      {`This is an open source bug tracker system.`}\n                      <br></br>\n                      {`It's free. Setup takes less than 5 minutes.`}\n                      <br></br>\n                      {`Whether you are reporting or fixing a bug, we got you covered. `}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      onClick={() => {\n                        history.push('/signin')\n                      }}\n                    >\n                      Get started\n                  </Button>\n                  </CardActions>\n                </Card>\n                {/* End of  */}\n\n                <Card className={classes.card}>\n                  <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                      Want to test it out on desktop?\n                  </Typography>\n                    <br />\n                    <Typography>{'Paste this in Node command line:'}</Typography>\n                    <br />\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                      {' '}\n                      git clone https://github.com/danninemx/project-issue-manager{' '}\n                      <br></br>\n                      {' '}\n                      npm i  #or yarn{' '}\n                      <br></br>\n                      {' '}\n                      npm start  #or yarn run start{' '}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      onClick={() => {\n                        let win = window.open('https://github.com/danninemx/project-issue-manager', '_blank')\n                        win.focus()\n                      }}\n                    >\n                      Learn More\n                  </Button>\n                  </CardActions>\n                </Card>\n              </div>\n\n              {/* End of cardsContent */}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount = () => {\n    console.log(' landing props: ', this.props)\n    console.log('landing state: ', this.state)\n  }\n\n  componentDidUpdate = () => {\n    console.log(' landing props: ', this.props)\n    console.log('landing state: ', this.state)\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <p>{this.state.isAuthenticated.toString()}</p>\n          <Switch>\n            <Route exact path=\"/\" component={this.LandingPage} />\n            <Route exact path=\"/signinpage\" handler={this.handler} component={SigninPage} />\n            {/* <SigninPage handler={this.handler} */}\n            <Route exact path=\"/submitissue\" component={SubmitIssue} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/developerview\">\n              <DeveloperView />\n            </Route>\n            {/* <Route path=\"*\" component={NoMatch} /> */}\n\n          </Switch>\n        </div>\n      </Router >\n    )\n  }\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}